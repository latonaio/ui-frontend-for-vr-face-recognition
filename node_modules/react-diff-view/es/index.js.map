{"version":3,"file":"index.js","sources":["../node_modules/classnames/index.js","../src/context/index.js","../src/utils/diff/util.js","../src/utils/diff/factory.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/eq.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/keys.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/toString.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/get.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/identity.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/findLastIndex.js","../src/utils/diff/insertHunk.js","../src/utils/diff/expandCollapsedBlockBy.js","../src/utils/diff/getChangeKey.js","../src/utils/diff/index.js","../node_modules/gitdiff-parser/index.js","../src/utils/parse.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/mapValues.js","../src/Hunk/CodeCell.js","../src/Hunk/utils.js","../src/Hunk/UnifiedHunk/UnifiedChange.js","../src/Hunk/UnifiedHunk/UnifiedWidget.js","../src/Hunk/UnifiedHunk/index.js","../src/Hunk/SplitHunk/SplitChange.js","../src/Hunk/SplitHunk/SplitWidget.js","../src/Hunk/SplitHunk/index.js","../src/Hunk/index.js","../src/Diff/index.js","../node_modules/warning/warning.js","../src/Decoration/SplitDecoration.js","../src/Decoration/UnifiedDecoration.js","../src/Decoration/index.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/_baseLodash.js","../node_modules/lodash/_LodashWrapper.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/flatten.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/constant.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/_metaMap.js","../node_modules/lodash/noop.js","../node_modules/lodash/_getData.js","../node_modules/lodash/_realNames.js","../node_modules/lodash/_getFuncName.js","../node_modules/lodash/_LazyWrapper.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_wrapperClone.js","../node_modules/lodash/wrapperLodash.js","../node_modules/lodash/_isLaziable.js","../node_modules/lodash/_createFlow.js","../node_modules/lodash/flow.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/last.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/map.js","../node_modules/lodash/flatMap.js","../src/tokenize/toTokenTrees.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_parent.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/omit.js","../src/tokenize/utils.js","../src/tokenize/normalizeToLines.js","../node_modules/lodash/isEqual.js","../src/tokenize/backToTree.js","../node_modules/lodash/groupBy.js","../node_modules/lodash/isEmpty.js","../src/tokenize/pickRanges.js","../node_modules/lodash/findIndex.js","../node_modules/diff-match-patch/index.js","../src/tokenize/markEdits.js","../src/tokenize/markWord.js","../src/tokenize/index.js","../node_modules/change-emitter/lib/index.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../node_modules/recompose/dist/Recompose.esm.js","../src/hooks/useMinCollapsedLines.js","../src/hooks/helpers.js","../src/hooks/useChangeSelect.js","../src/hooks/useSourceExpansion.js","../node_modules/shallow-equal/objects/index.js","../node_modules/shallow-equal/arrays/index.js","../src/hooks/useTokenizeWorker.js","../src/hocs/withSourceExpansion.js","../src/hocs/minCollapsedLines.js","../src/hocs/withChangeSelect.js","../src/hocs/withTokenizeWorker.js"],"sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import {createContext, useContext} from 'react';\n\nconst ContextType = createContext();\nconst {Provider} = ContextType;\nconst useDiffSettings = () => useContext(ContextType);\n\nexport {\n    Provider,\n    useDiffSettings,\n};\n","export const first = array => array[0];\n\nexport const last = array => array[array.length - 1];\n\nexport const sideToProperty = side => [side + 'Start', side + 'Lines'];\n","import {first, last, sideToProperty} from './util';\n\nexport const computeLineNumberFactory = side => {\n    if (side === 'old') {\n        return ({isNormal, isInsert, lineNumber, oldLineNumber}) => {\n            if (isInsert) {\n                return -1;\n            }\n\n            return isNormal ? oldLineNumber : lineNumber;\n        };\n    }\n    return ({isNormal, isDelete, lineNumber, newLineNumber}) => {\n        if (isDelete) {\n            return -1;\n        }\n\n        return isNormal ? newLineNumber : lineNumber;\n    };\n};\n\nexport const isInHunkFactory = (startProperty, linesProperty) => (hunk, lineNumber) => {\n    const start = hunk[startProperty];\n    const end = start + hunk[linesProperty];\n\n    return lineNumber >= start && lineNumber < end;\n};\n\nexport const isBetweenHunksFactory = (startProperty, linesProperty) => (previousHunk, nextHunk, lineNumber) => {\n    const start = previousHunk[startProperty] + previousHunk[linesProperty];\n    const end = nextHunk[startProperty];\n\n    return lineNumber >= start && lineNumber < end;\n};\n\nconst findContainerHunkFactory = side => {\n    const [startProperty, linesProperty] = sideToProperty(side);\n    const isInHunk = isInHunkFactory(startProperty, linesProperty);\n\n    return (hunks, lineNumber) => hunks.find(hunk => isInHunk(hunk, lineNumber));\n};\n\n/* eslint-disable consistent-return */\nexport const findChangeByLineNumberFactory = side => {\n    const computeLineNumber = computeLineNumberFactory(side);\n    const findContainerHunk = findContainerHunkFactory(side);\n\n    return (hunks, lineNumber) => {\n        const containerHunk = findContainerHunk(hunks, lineNumber);\n\n        if (!containerHunk) {\n            return undefined;\n        }\n\n        return containerHunk.changes.find(change => computeLineNumber(change) === lineNumber);\n    };\n};\n/* eslint-enable consistent-return */\n\nexport const getCorrespondingLineNumberFactory = baseSide => {\n    const anotherSide = baseSide === 'old' ? 'new' : 'old';\n    const [baseStart, baseLines] = sideToProperty(baseSide);\n    const [correspondingStart, correspondingLines] = sideToProperty(anotherSide);\n    const baseLineNumber = computeLineNumberFactory(baseSide);\n    const correspondingLineNumber = computeLineNumberFactory(anotherSide);\n    const isInHunk = isInHunkFactory(baseStart, baseLines);\n    const isBetweenHunks = isBetweenHunksFactory(baseStart, baseLines);\n\n    /* eslint-disable complexity */\n    return (hunks, lineNumber) => {\n        const firstHunk = first(hunks);\n\n        // Before first hunk\n        if (lineNumber < firstHunk[baseStart]) {\n            const spanFromStart = firstHunk[baseStart] - lineNumber;\n            return firstHunk[correspondingStart] - spanFromStart;\n        }\n\n        // After last hunk, this can be done in `for` loop, just a quick return path\n        const lastHunk = last(hunks);\n        if (lastHunk[baseStart] + lastHunk[baseLines] <= lineNumber) {\n            const spanFromEnd = lineNumber - lastHunk[baseStart] - lastHunk[baseLines];\n            return lastHunk[correspondingStart] + lastHunk[correspondingLines] + spanFromEnd;\n        }\n\n        for (let i = 0; i < hunks.length; i++) {\n            const currentHunk = hunks[i];\n            const nextHunk = hunks[i + 1];\n\n            // Within current hunk\n            if (isInHunk(currentHunk, lineNumber)) {\n                const changeIndex = currentHunk.changes.findIndex(change => baseLineNumber(change) === lineNumber);\n                const change = currentHunk.changes[changeIndex];\n\n                if (change.isNormal) {\n                    return correspondingLineNumber(change);\n                }\n\n                // For changes of type \"insert\" and \"delete\", the sibling change can be the corresponding one,\n                // or they can have no corresponding change\n                //\n                // Git diff always put delete change before insert change\n                //\n                // Note that `nearbySequences: \"zip\"` option can affect this function\n                const possibleCorrespondingChangeIndex = change.isDelete ? changeIndex + 1 : changeIndex - 1;\n                const possibleCorrespondingChange = currentHunk.changes[possibleCorrespondingChangeIndex];\n\n                if (!possibleCorrespondingChange) {\n                    return -1;\n                }\n\n                const negativeChangeType = change.isInsert ? 'delete' : 'insert';\n\n                return possibleCorrespondingChange.type === negativeChangeType\n                    ? correspondingLineNumber(possibleCorrespondingChange)\n                    : -1;\n            }\n\n            // Between 2 hunks\n            if (isBetweenHunks(currentHunk, nextHunk, lineNumber)) {\n                const spanFromEnd = lineNumber - currentHunk[baseStart] - currentHunk[baseLines];\n                return currentHunk[correspondingStart] + currentHunk[correspondingLines] + spanFromEnd;\n            }\n        }\n\n        /* istanbul ignore next Should not arrive here */\n        throw new Error(`Unexpected line position ${lineNumber}`);\n    };\n    /* eslint-enable complexity */\n};\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","import {findLastIndex} from 'lodash';\nimport {computeLineNumberFactory} from './factory';\nimport {last} from './util';\n\nconst computeOldLineNumber = computeLineNumberFactory('old');\n\nconst computeNewLineNumber = computeLineNumberFactory('new');\n\nconst getOldRangeFromHunk = ({oldStart, oldLines}) => [oldStart, oldStart + oldLines - 1];\n\nconst createHunkFromChanges = changes => {\n    if (!changes.length) {\n        return null;\n    }\n\n    const initial = {\n        isPlain: true,\n        content: '',\n        oldStart: -1,\n        oldLines: 0,\n        newStart: -1,\n        newLines: 0,\n    };\n    /* eslint-disable no-param-reassign */\n    const hunk = changes.reduce(\n        (hunk, change) => {\n            if (!change.isNormal) {\n                hunk.isPlain = false;\n            }\n\n            if (!change.isInsert) {\n                hunk.oldLines = hunk.oldLines + 1;\n\n                if (hunk.oldStart === -1) {\n                    hunk.oldStart = computeOldLineNumber(change);\n                }\n            }\n\n            if (!change.isDelete) {\n                hunk.newLines = hunk.newLines + 1;\n\n                if (hunk.newStart === -1) {\n                    hunk.newStart = computeNewLineNumber(change);\n                }\n            }\n\n            return hunk;\n        },\n        initial\n    );\n    /* eslint-enable no-param-reassign */\n    const {oldStart, oldLines, newStart, newLines} = hunk;\n\n    return {\n        ...hunk,\n        content: `@@ -${oldStart},${oldLines} +${newStart},${newLines}`,\n        changes: changes,\n    };\n};\n\nexport const textLinesToHunk = (lines, oldStartLineNumber, newStartLineNumber) => {\n    const lineToChange = (line, i) => {\n        return {\n            type: 'normal',\n            isNormal: true,\n            oldLineNumber: oldStartLineNumber + i,\n            newLineNumber: newStartLineNumber + i,\n            content: '' + line,\n        };\n    };\n    const changes = lines.map(lineToChange);\n\n    return createHunkFromChanges(changes);\n};\n\nconst sliceHunk = ({changes}, startOldLineNumber, endOldLineNumber) => {\n    const changeIndex = changes.findIndex(change => computeOldLineNumber(change) >= startOldLineNumber);\n\n    if (changeIndex === -1) {\n        return null;\n    }\n\n    // It is possible to have some insert changes before `startOldLineNumber`,\n    // since we slice from old line number, these changes can be ommited, so we need to grab them back\n    const startIndex = (() => {\n        if (changeIndex === 0) {\n            return changeIndex;\n        }\n\n        const nearestHeadingNocmalChangeIndex = findLastIndex(changes, change => !change.isInsert, changeIndex - 1);\n        return nearestHeadingNocmalChangeIndex === -1 ? changeIndex : nearestHeadingNocmalChangeIndex + 1;\n    })();\n\n    if (endOldLineNumber === undefined) {\n        const slicedChanges = changes.slice(startIndex);\n\n        return createHunkFromChanges(slicedChanges);\n    }\n\n    const endIndex = findLastIndex(changes, change => computeOldLineNumber(change) <= endOldLineNumber);\n    const slicedChanges = changes.slice(startIndex, endIndex === -1 ? undefined : endIndex);\n\n    return createHunkFromChanges(slicedChanges);\n};\n\nconst mergeHunk = (previousHunk, nextHunk) => {\n    if (!previousHunk) {\n        return nextHunk;\n    }\n\n    if (!nextHunk) {\n        return previousHunk;\n    }\n\n    const [previousStart, previousEnd] = getOldRangeFromHunk(previousHunk);\n    const [nextStart, nextEnd] = getOldRangeFromHunk(nextHunk);\n\n    // They are just neighboring, simply concat changes and adjust lines count\n    if (previousEnd + 1 === nextStart) {\n        return createHunkFromChanges([...previousHunk.changes, ...nextHunk.changes]);\n    }\n\n    // It is possible that `previousHunk` entirely **contains** `nextHunk`,\n    // and if we are merging a fake hunk with a valid hunk, we need to replace `nextHunk`'s corresponding range\n    if (previousStart <= nextStart && previousEnd >= nextEnd) {\n        if (previousHunk.isPlain && !nextHunk.isPlain) {\n            const head = sliceHunk(previousHunk, previousStart, nextStart);\n            const tail = sliceHunk(previousHunk, nextEnd + 1);\n            return mergeHunk(mergeHunk(head, nextHunk), tail);\n        }\n\n        return previousHunk;\n    }\n\n    // The 2 hunks have some overlapping, we need to slice the fake one in order to preserve non-normal changes\n    if (previousHunk.isPlain) {\n        const head = sliceHunk(previousHunk, previousStart, nextStart);\n        return mergeHunk(head, nextHunk);\n    }\n\n    const tail = sliceHunk(nextHunk, previousEnd + 1);\n    return mergeHunk(previousHunk, tail);\n};\n\nconst appendOrMergeHunk = (hunks, nextHunk) => {\n    const lastHunk = last(hunks);\n\n    if (!lastHunk) {\n        return [nextHunk];\n    }\n\n    const expectedNextStart = lastHunk.oldStart + lastHunk.oldLines;\n    const actualNextStart = nextHunk.oldStart;\n\n    if (expectedNextStart < actualNextStart) {\n        return hunks.concat(nextHunk);\n    }\n\n    const mergedHunk = mergeHunk(lastHunk, nextHunk);\n\n    return [...hunks.slice(0, -1), mergedHunk];\n};\n\nexport const insertHunk = (hunks, insertion) => {\n    const insertionOldLineNumber = computeOldLineNumber(insertion.changes[0]);\n    const isLaterThanInsertion = ({changes}) => {\n        if (!changes.length) {\n            return false;\n        }\n\n        return computeOldLineNumber(changes[0]) >= insertionOldLineNumber;\n    };\n    const insertPosition = hunks.findIndex(isLaterThanInsertion);\n    const hunksWithInsertion = insertPosition === -1\n        ? hunks.concat(insertion)\n        : [\n            ...hunks.slice(0, insertPosition),\n            insertion,\n            ...hunks.slice(insertPosition),\n        ];\n\n    return hunksWithInsertion.reduce(appendOrMergeHunk, []);\n};\n","import {insertHunk, textLinesToHunk} from './insertHunk';\nimport {\n    computeLineNumberFactory, isInHunkFactory, isBetweenHunksFactory, getCorrespondingLineNumberFactory,\n} from './factory';\nimport {first} from './util';\n\nconst getCorrespondingNewLineNumber = getCorrespondingLineNumberFactory('old');\n\nconst computeOldLineNumber = computeLineNumberFactory('old');\n\nconst isOldLineNumberInHunk = isInHunkFactory('oldStart', 'oldLines');\n\nconst isOldLineNumberBetweenHunks = isBetweenHunksFactory('oldStart', 'oldLines');\n\nconst findCorrespondingValidHunkIndex = (hunks, oldLineNumber) => {\n    if (!hunks.length) {\n        return -1;\n    }\n\n    const firstHunk = first(hunks);\n    if (oldLineNumber < firstHunk.oldStart || isOldLineNumberInHunk(firstHunk, oldLineNumber)) {\n        return 0;\n    }\n\n    for (let i = 1; i < hunks.length; i++) {\n        const currentHunk = hunks[i];\n\n        if (isOldLineNumberInHunk(currentHunk, oldLineNumber)) {\n            return i;\n        }\n\n        const previousHunk = hunks[i - 1];\n\n        if (isOldLineNumberBetweenHunks(previousHunk, currentHunk, oldLineNumber)) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nconst findNearestNormalChangeIndex = ({changes}, start) => {\n    const index = changes.findIndex(change => computeOldLineNumber(change) === start);\n\n    for (let i = index; i < changes.length; i++) {\n        const change = changes[i];\n\n        if (change.isNormal) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nconst splitRangeToValidOnes = (hunks, start, end) => {\n    const correspondingHunkIndex = findCorrespondingValidHunkIndex(hunks, start);\n\n    // `start` is after all hunks, we believe all left lines are normal.\n    if (correspondingHunkIndex === -1) {\n        return [[start, end]];\n    }\n\n    const correspondingHunk = hunks[correspondingHunkIndex];\n\n    // If `start` points to a line before this hunk, we collect all heading normal changes\n    if (start < correspondingHunk.oldStart) {\n        const headingChangesCount = correspondingHunk.changes.findIndex(change => !change.isNormal);\n        const validEnd = correspondingHunk.oldStart + Math.max(headingChangesCount, 0);\n\n        if (validEnd >= end) {\n            return [[start, end]];\n        }\n\n        return [\n            [start, validEnd],\n            ...splitRangeToValidOnes(hunks, validEnd + 1, end),\n        ];\n    }\n\n    // Now the `correspondingHunk` must be a hunk containing `start`,\n    // however it is still possible that `start` is not a normal change\n    const {changes} = correspondingHunk;\n    const nearestNormalChangeIndex = findNearestNormalChangeIndex(correspondingHunk, start);\n\n    // If there is no normal changes after `start`, splitting ends up here\n    if (nearestNormalChangeIndex === -1) {\n        return [];\n    }\n\n    const validStartChange = changes[nearestNormalChangeIndex];\n    const validStart = computeOldLineNumber(validStartChange);\n    // Iterate to `end`, if `end` falls out of hunk, we can split it to 2 ranges\n    const adjacentChangesCount = changes.slice(nearestNormalChangeIndex + 1).findIndex(change => !change.isNormal);\n    const validEnd = computeOldLineNumber(validStartChange) + Math.max(adjacentChangesCount, 0);\n\n    if (validEnd >= end) {\n        return [[validStart, end]];\n    }\n\n    return [\n        [validStart, validEnd],\n        ...splitRangeToValidOnes(hunks, validEnd + 1, end),\n    ];\n};\n\nconst expandCodeByValidRange = (hunks, rawCodeOrLines, [start, end]) => {\n    // Note `end` is not inclusive, this is the same as `Array.prototype.slice` method\n    const linesOfCode = typeof rawCodeOrLines === 'string' ? rawCodeOrLines.split('\\n') : rawCodeOrLines;\n    const slicedLines = linesOfCode.slice(Math.max(start, 1) - 1, end - 1);\n\n    if (!slicedLines.length) {\n        return hunks;\n    }\n\n    const slicedHunk = textLinesToHunk(slicedLines, start, getCorrespondingNewLineNumber(hunks, start));\n    return insertHunk(hunks, slicedHunk);\n};\n\nexport const expandFromRawCode = (hunks, rawCodeOrLines, start, end) => {\n    // It is possible to have some insert or delete changes between `start` and `end`,\n    // in order to be 100% safe, we need to split the range to one or more ranges which contains only normal changes.\n    //\n    // For each `start` line number, we can either:\n    //\n    // 1. Find a change and adjust to a nearest normal one.\n    // 2. Find no corresponding change so it must be a collapsed normal change.\n    //\n    // For both cases we can have a starting normal change, then we iterate over its subsequent changes\n    // (line numbers with no corresponding change is considered a normal one)\n    // until an insert or delete is encountered, this is a **valid range**.\n    //\n    // After one valid range is resolved, discard all line numbers related to delete changes, the next normal change\n    // is the start of next valid range.\n    const validRanges = splitRangeToValidOnes(hunks, start, end);\n\n    return validRanges.reduce((hunks, range) => expandCodeByValidRange(hunks, rawCodeOrLines, range), hunks);\n};\n\nexport const getCollapsedLinesCountBetween = (previousHunk, nextHunk) => {\n    if (!previousHunk) {\n        return nextHunk.oldStart - 1;\n    }\n\n    if (!nextHunk) {\n        throw new Error('Unable to compute lines count after the last hunk');\n    }\n\n    const previousEnd = previousHunk.oldStart + previousHunk.oldLines;\n    const nextStart = nextHunk.oldStart;\n\n    return nextStart - previousEnd;\n};\n\nexport const expandCollapsedBlockBy = (hunks, rawCodeOrLines, predicate) => {\n    const linesOfCode = typeof rawCodeOrLines === 'string' ? rawCodeOrLines.split('\\n') : rawCodeOrLines;\n    const firstHunk = first(hunks);\n    const initialExpandingBlocks = predicate(firstHunk.oldStart - 1, 1, 1) ? [[1, firstHunk.oldStart]] : [];\n\n    const expandingBlocks = hunks.reduce(\n        (expandingBlocks, currentHunk, index, hunks) => {\n            const nextHunk = hunks[index + 1];\n            const oldStart = currentHunk.oldStart + currentHunk.oldLines;\n            const newStart = currentHunk.newStart + currentHunk.newLines;\n            const lines = nextHunk\n                ? getCollapsedLinesCountBetween(currentHunk, nextHunk)\n                : linesOfCode.length - oldStart + 1;\n            const shouldExpand = predicate(lines, oldStart, newStart);\n\n            if (shouldExpand) {\n                // initialExpandingBlocks is scoped, it is redundant to copy the array\n                expandingBlocks.push([oldStart, oldStart + lines]);\n            }\n            return expandingBlocks;\n        },\n        initialExpandingBlocks\n    );\n\n    return expandingBlocks.reduce((hunks, [start, end]) => expandFromRawCode(hunks, linesOfCode, start, end), hunks);\n};\n","export const getChangeKey = change => {\n    if (!change) {\n        throw new Error('change is not provided');\n    }\n\n    const {isNormal, isInsert, lineNumber, oldLineNumber} = change;\n\n    if (isNormal) {\n        return 'N' + oldLineNumber;\n    }\n\n    const prefix = isInsert ? 'I' : 'D';\n    return prefix + lineNumber;\n};\n","import {computeLineNumberFactory, findChangeByLineNumberFactory, getCorrespondingLineNumberFactory} from './factory';\n\nexport * from './insertHunk';\nexport * from './expandCollapsedBlockBy';\nexport * from './getChangeKey';\n\nexport const computeOldLineNumber = computeLineNumberFactory('old');\n\nexport const computeNewLineNumber = computeLineNumberFactory('new');\n\nexport const findChangeByOldLineNumber = findChangeByLineNumberFactory('old');\n\nexport const findChangeByNewLineNumber = findChangeByLineNumberFactory('new');\n\nexport const getCorrespondingOldLineNumber = getCorrespondingLineNumberFactory('new');\n\nexport const getCorrespondingNewLineNumber = getCorrespondingLineNumberFactory('old');\n","/**\n * @file gitdiff 消息解析器\n * @author errorrik(errorrik@gmail.com)\n */\n\n(function (root) {\n    var STAT_START = 2;\n    var STAT_FILE_META = 3;\n    var STAT_HUNK = 5;\n\n\n    var parser = {\n        /**\n         * 解析 gitdiff 消息\n         *\n         * @param {string} source gitdiff消息内容\n         * @return {Object}\n         */\n        parse: function (source) {\n            var infos = [];\n            var stat = STAT_START;\n            var currentInfo;\n            var currentHunk;\n            var changeOldLine;\n            var changeNewLine;\n\n\n            var lines = source.split('\\n');\n            var linesLen = lines.length;\n            var i = 0;\n\n            while (i < linesLen) {\n                var line = lines[i];\n\n                if (line.indexOf('diff --git') === 0) {\n                    // read file\n                    currentInfo = {\n                        hunks: [],\n                        oldEndingNewLine: true,\n                        newEndingNewLine: true\n                    };\n\n                    infos.push(currentInfo);\n\n\n                    // 1. 如果oldPath是/dev/null就是add\n                    // 2. 如果newPath是/dev/null就是delete\n                    // 3. 如果有 rename from foo.js 这样的就是rename\n                    // 4. 如果有 copy from foo.js 这样的就是copy\n                    // 5. 其它情况是modify\n                    var currentInfoType = null;\n\n                    // read mode change\n                    var nextLine = lines[i + 1];\n                    if (nextLine.indexOf('old') === 0) {\n                        currentInfo.oldMode = nextLine.slice(9, 16);\n                        currentInfo.newMode = lines[i + 2].slice(9, 16);\n                        i += 2;\n                        nextLine = lines[i + 1];\n                    }\n\n                    // read similarity\n                    if (nextLine.indexOf('similarity') === 0) {\n                        currentInfo.similarity = parseInt(nextLine.split(' ')[2], 10);\n                        i += 1;\n                    }\n\n                    // read type and index\n                    var simiLine;\n                    simiLoop: while ((simiLine = lines[++i])) {\n                        var spaceIndex = simiLine.indexOf(' ');\n                        var infoType = spaceIndex > -1 ? simiLine.slice(0, spaceIndex) : infoType;\n\n                        switch (infoType) {\n                            case 'diff': // diff --git\n                                i--;\n                                break simiLoop;\n\n                            case 'index':\n                                var segs = simiLine.slice(spaceIndex + 1).split(' ');\n                                var revs = segs[0].split('..');\n                                currentInfo.oldRevision = revs[0];\n                                currentInfo.newRevision = revs[1];\n\n                                if (segs[1]) {\n                                    currentInfo.oldMode = currentInfo.newMode = segs[1];\n                                }\n                                break;\n                            \n\n                            case 'copy':\n                            case 'rename':\n                                var infoStr = simiLine.slice(spaceIndex + 1);\n                                if (infoStr.indexOf('from') === 0) {\n                                    currentInfo.oldPath = infoStr.slice(5);\n                                }\n                                else { // rename to\n                                    currentInfo.newPath = infoStr.slice(3);\n                                }\n                                break;\n\n                            case '---':\n                                var oldPath = simiLine.slice(spaceIndex + 1);\n                                var newPath = lines[++i].slice(4); // next line must be \"+++ xxx\"\n                                if (oldPath === '/dev/null') {\n                                    newPath = newPath.slice(2);\n                                    currentInfoType = 'add';\n                                }\n                                else if (newPath === '/dev/null') {\n                                    oldPath = oldPath.slice(2);\n                                    currentInfoType = 'delete';\n                                } else {\n                                    currentInfoType = 'modify';\n                                    oldPath = oldPath.slice(2);\n                                    newPath = newPath.slice(2);\n                                }\n\n                                currentInfo.oldPath = oldPath;\n                                currentInfo.newPath = newPath;\n                                stat = STAT_HUNK;\n                                break simiLoop;\n                        }\n\n                        if (!currentInfoType) {\n                            currentInfoType = infoType;\n                        }\n                    }\n\n                    currentInfo.type = currentInfoType || 'modify';\n                }\n                else if (line.indexOf('Binary') === 0) {\n                    currentInfo.isBinary = true;\n                    currentInfo.type = line.indexOf('/dev/null and') >= 0\n                        ? 'add'\n                        : (line.indexOf('and /dev/null') >= 0 ? 'delete' : 'modify');\n                    stat = STAT_START;\n                    currentInfo = null;\n                }\n                else if (stat === STAT_HUNK) {\n                    if (line.indexOf('@@') === 0) {\n                        var match = /^@@\\s+-([0-9]+)(,([0-9]+))?\\s+\\+([0-9]+)(,([0-9]+))?/.exec(line)\n                        currentHunk = {\n                            content: line,\n                            oldStart: match[1] - 0,\n                            newStart: match[4] - 0,\n                            oldLines: match[3] - 0 || 1,\n                            newLines: match[6] - 0 || 1,\n                            changes: []\n                        };\n\n                        currentInfo.hunks.push(currentHunk);\n                        changeOldLine = currentHunk.oldStart;\n                        changeNewLine = currentHunk.newStart;\n                    }\n                    else {\n                        var typeChar = line.slice(0, 1);\n                        var change = {\n                            content: line.slice(1)\n                        };\n\n                        switch (typeChar) {\n                            case '+':\n                                change.type = 'insert';\n                                change.isInsert = true;\n                                change.lineNumber = changeNewLine;\n                                changeNewLine++;\n                                break;\n\n                            case '-':\n                                change.type = 'delete';\n                                change.isDelete = true;\n                                change.lineNumber = changeOldLine;\n                                changeOldLine++;\n                                break;\n\n                            case ' ':\n                                change.type = 'normal';\n                                change.isNormal = true;\n                                change.oldLineNumber = changeOldLine;\n                                change.newLineNumber = changeNewLine;\n                                changeOldLine++;\n                                changeNewLine++;\n                                break;\n\n                            case '\\\\': // Seems \"no newline\" is the only case starting with /\n                                var lastChange = currentHunk.changes[currentHunk.changes.length - 1];\n                                if (!lastChange.isDelete) {\n                                    currentInfo.newEndingNewLine = false;\n                                }\n                                if (!lastChange.isInsert) {\n                                    currentInfo.oldEndingNewLine = false;\n                                }\n                        }\n\n                        change.type && currentHunk.changes.push(change);\n                    }\n                }\n\n                i++;\n            }\n\n            return infos;\n        }\n    };\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = parser;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('gitDiffParser', [], parser);\n    }\n    else {\n        root.gitDiffParser = parser;\n    }\n})(this);\n","import parser from 'gitdiff-parser';\n\nconst zipChanges = changes => {\n    const [result] = changes.reduce(\n        ([result, last, lastDeletionIndex], current, i) => {\n            if (!last) {\n                result.push(current);\n                return [result, current, current.isDelete ? i : -1];\n            }\n\n            if (current.isInsert && lastDeletionIndex >= 0) {\n                result.splice(lastDeletionIndex + 1, 0, current);\n                // The new `lastDeletionIndex` may be out of range, but `splice` will fix it\n                return [result, current, lastDeletionIndex + 2];\n            }\n\n            result.push(current);\n\n            // Keep the `lastDeletionIndex` if there are lines of deletions,\n            // otherwise update it to the new deletion line\n            const newLastDeletionIndex = current.isDelete ? (last.isDelete ? lastDeletionIndex : i) : i;\n\n            return [result, current, newLastDeletionIndex];\n        },\n        [[], null, -1]\n    );\n    return result;\n};\n\nconst mapHunk = (hunk, options) => {\n    const changes = options.nearbySequences === 'zip' ? zipChanges(hunk.changes) : hunk.changes;\n\n    return {\n        ...hunk,\n        isPlain: false,\n        changes: changes,\n    };\n};\n\nconst mapFile = (file, options) => {\n    const hunks = file.hunks.map(hunk => mapHunk(hunk, options));\n\n    return {...file, hunks};\n};\n\nconst normalizeDiffText = text => {\n    // Git diff header:\n    //\n    // diff --git a/test/fixture/test/ci.go b/test/fixture/test/ci.go\n    // index 6829b8a2..4c565f1b 100644\n    // --- a/test/fixture/test/ci.go\n    // +++ b/test/fixture/test/ci.go\n    if (text.indexOf('diff --git') === 0) {\n        return text;\n    }\n\n    // Unidiff header:\n    //\n    // --- /test/fixture/test/ci.go 2002-02-21 23:30:39.942229878 -0800\n    // +++ /test/fixture/test/ci.go 2002-02-21 23:30:50.442260588 -0800\n    const indexOfFirstLineBreak = text.indexOf('\\n');\n    const indexOfSecondLineBreak = text.indexOf('\\n', indexOfFirstLineBreak + 1);\n    const firstLine = text.slice(0, indexOfFirstLineBreak);\n    const secondLine = text.slice(indexOfFirstLineBreak + 1, indexOfSecondLineBreak);\n    const oldPath = firstLine.split(' ').slice(1, -3).join(' ');\n    const newPath = secondLine.split(' ').slice(1, -3).join(' ');\n    const segments = [\n        `diff --git a/${oldPath} b/${newPath}`,\n        'index 1111111..2222222 100644',\n        `--- a/${oldPath}`,\n        `+++ b/${newPath}`,\n        text.slice(indexOfSecondLineBreak + 1),\n    ];\n\n    return segments.join('\\n');\n};\n\nexport const parseDiff = (text, options = {}) => {\n    const diffText = normalizeDiffText(text.trim());\n    const files = parser.parse(diffText);\n\n    return files.map(file => mapFile(file, options));\n};\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst defaultRenderToken = ({type, value, markType, properties, className, children}, i) => {\n    const renderWithClassName = className => (\n        <span key={i} className={className}>\n            {value ? value : (children && children.map(defaultRenderToken))}\n        </span>\n    );\n\n\n    switch (type) {\n        case 'text':\n            return value;\n        case 'mark':\n            return renderWithClassName(`diff-code-mark diff-code-mark-${markType}`);\n        case 'edit':\n            return renderWithClassName('diff-code-edit');\n        default: {\n            // properties normally not exist since it is deconstructed in pickRange, remove in next major release\n            const legacyClassName = properties && properties.className;\n            return renderWithClassName(classNames(className || legacyClassName));\n        }\n    }\n};\n\nconst CodeCell = props => {\n    const {text, tokens, renderToken, ...attributes} = props;\n    const actualRenderToken = renderToken\n        ? (token, i) => renderToken(token, defaultRenderToken, i)\n        : defaultRenderToken;\n\n    return (\n        <td {...attributes}>\n            {\n                tokens\n                    ? (tokens.length ? tokens.map(actualRenderToken) : ' ')\n                    : (text || ' ')\n            }\n        </td>\n    );\n};\n\nCodeCell.propTypes = {\n    text: PropTypes.string.isRequired,\n    tokens: PropTypes.arrayOf(PropTypes.object),\n};\n\nCodeCell.defaultProps = {\n    tokens: null,\n};\n\nexport default memo(CodeCell);\n","import {computeOldLineNumber, computeNewLineNumber} from '../utils';\n\nexport const renderDefaultBy = (change, side) => () => {\n    const lineNumber = side === 'old' ? computeOldLineNumber(change) : computeNewLineNumber(change);\n    return lineNumber === -1 ? undefined : lineNumber;\n};\n\nexport const wrapInAnchorBy = (gutterAnchor, anchorTarget) => element => {\n    if (!gutterAnchor || !element) {\n        return element;\n    }\n\n    return <a href={'#' + anchorTarget}>{element}</a>;\n};\n\nexport const composeCallback = (own, custom) => {\n    if (custom) {\n        return e => {\n            own(e);\n            custom(); // `custom` is already bound with `arg`\n        };\n    }\n\n    return own;\n};\n","/* eslint-disable no-empty-function */\nimport {memo, useState, useMemo, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {mapValues} from 'lodash';\nimport CodeCell from '../CodeCell';\nimport {composeCallback, renderDefaultBy, wrapInAnchorBy} from '../utils';\n\nconst useBoundCallbacks = (callbacks, arg, hoverOn, hoverOff) => useMemo(\n    () => {\n        const output = mapValues(callbacks, fn => () => fn(arg));\n        output.onMouseEnter = composeCallback(hoverOn, output.onMouseEnter);\n        output.onMouseLeave = composeCallback(hoverOff, output.onMouseLeave);\n        return output;\n    },\n    [callbacks, hoverOn, hoverOff, arg]\n);\n\nconst useBoolean = () => {\n    const [value, setValue] = useState(false);\n    const on = useCallback(() => setValue(true), []);\n    const off = useCallback(() => setValue(false), []);\n    return [value, on, off];\n};\n\nconst renderGutterCell = (className, change, side, gutterAnchor, anchorTarget, events, inHoverState, renderGutter) => {\n    const gutterOptions = {\n        change,\n        side,\n        inHoverState,\n        renderDefault: renderDefaultBy(change, side),\n        wrapInAnchor: wrapInAnchorBy(gutterAnchor, anchorTarget),\n    };\n\n    return (\n        <td className={className} {...events}>\n            {renderGutter(gutterOptions)}\n        </td>\n    );\n};\n\nconst UnifiedChange = props => {\n    const {\n        change,\n        selected,\n        tokens,\n        className,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        hideGutter,\n        gutterAnchor,\n        generateAnchorID,\n        renderToken,\n        renderGutter,\n    } = props;\n    const {type, content} = change;\n\n    const [hover, hoverOn, hoverOff] = useBoolean();\n    const eventArg = useMemo(() => ({change}), [change]);\n    const boundGutterEvents = useBoundCallbacks(gutterEvents, eventArg, hoverOn, hoverOff);\n    const boundCodeEvents = useBoundCallbacks(codeEvents, eventArg, hoverOn, hoverOff);\n\n    const anchorID = generateAnchorID(change);\n    const gutterClassNameValue = classNames(\n        'diff-gutter',\n        `diff-gutter-${type}`,\n        gutterClassName,\n        {'diff-gutter-selected': selected}\n    );\n    const codeClassNameValue = classNames(\n        'diff-code',\n        `diff-code-${type}`,\n        codeClassName,\n        {'diff-code-selected': selected}\n    );\n\n    return (\n        <tr id={anchorID} className={classNames('diff-line', className)}>\n            {\n                !hideGutter && renderGutterCell(\n                    gutterClassNameValue,\n                    change,\n                    'old',\n                    gutterAnchor,\n                    anchorID,\n                    boundGutterEvents,\n                    hover,\n                    renderGutter\n                )\n            }\n            {\n                !hideGutter && renderGutterCell(\n                    gutterClassNameValue,\n                    change,\n                    'new',\n                    gutterAnchor,\n                    anchorID,\n                    boundGutterEvents,\n                    hover,\n                    renderGutter\n                )\n            }\n            <CodeCell\n                className={codeClassNameValue}\n                text={content}\n                tokens={tokens}\n                renderToken={renderToken}\n                {...boundCodeEvents}\n            />\n        </tr>\n    );\n};\n\n\nUnifiedChange.propTypes = {\n    selected: PropTypes.bool.isRequired,\n    tokens: PropTypes.arrayOf(PropTypes.object),\n};\n\nUnifiedChange.defaultProps = {\n    tokens: null,\n};\n\nexport default memo(UnifiedChange);\n","const UnifiedWidget = ({hideGutter, element}) => (\n    <tr className=\"diff-widget\">\n        <td colSpan={hideGutter ? 1 : 3} className=\"diff-widget-content\">\n            {element}\n        </td>\n    </tr>\n);\n\nexport default UnifiedWidget;\n","import classNames from 'classnames';\nimport {getChangeKey, computeOldLineNumber, computeNewLineNumber} from '../../utils';\nimport UnifiedChange from './UnifiedChange';\nimport UnifiedWidget from './UnifiedWidget';\n\nconst groupElements = (changes, widgets) => changes.reduce(\n    (elements, change) => {\n        const key = getChangeKey(change);\n\n        elements.push(['change', key, change]);\n\n        const widget = widgets[key];\n\n        if (widget) {\n            elements.push(['widget', key, widget]);\n        }\n\n        return elements;\n    },\n    []\n);\n\nconst renderRow = ([type, key, value], props) => {\n    const {hideGutter, selectedChanges, tokens, lineClassName, ...changeProps} = props;\n\n    if (type === 'change') {\n        const side = value.isDelete ? 'old' : 'new';\n        const lineNumber = value.isDelete ? computeOldLineNumber(value) : computeNewLineNumber(value);\n        const tokensOfLine = tokens ? tokens[side][lineNumber - 1] : null;\n\n        return (\n            <UnifiedChange\n                key={`change${key}`}\n                className={lineClassName}\n                change={value}\n                hideGutter={hideGutter}\n                selected={selectedChanges.includes(key)}\n                tokens={tokensOfLine}\n                {...changeProps}\n            />\n        );\n    }\n    else if (type === 'widget') {\n        return <UnifiedWidget key={`widget${key}`} hideGutter={hideGutter} element={value} />;\n    }\n\n    return null;\n};\n\nconst UnifiedHunk = props => {\n    const {\n        hunk,\n        widgets,\n        className,\n        ...childrenProps\n    } = props;\n    const elements = groupElements(hunk.changes, widgets);\n\n    return (\n        <tbody className={classNames('diff-hunk', className)}>\n            {elements.map(element => renderRow(element, childrenProps))}\n        </tbody>\n    );\n};\n\nexport default UnifiedHunk;\n","/* eslint-disable no-empty-function */\nimport {memo, useState, useMemo, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {mapValues} from 'lodash';\nimport CodeCell from '../CodeCell';\nimport {composeCallback, renderDefaultBy, wrapInAnchorBy} from '../utils';\n\nconst SIDE_OLD = 0;\nconst SIDE_NEW = 1;\n\nconst useCallbackOnSide = (side, setHover, change, customCallbacks) => {\n    const markHover = useCallback(() => setHover(side), [side, setHover]);\n    const unmarkHover = useCallback(() => setHover(''), [setHover]);\n    // Unlike selectors, hooks do not provide native functionality to customize comparator,\n    // on realizing that this does not reduce amount of renders, only preventing duplicate merge computations,\n    // we decide not to optimize this extremely, leave it recomputed on certain rerenders.\n    const callbacks = useMemo(\n        () => {\n            const callbacks = mapValues(customCallbacks, fn => () => fn({side, change}));\n            callbacks.onMouseEnter = composeCallback(markHover, callbacks.onMouseEnter);\n            callbacks.onMouseLeave = composeCallback(unmarkHover, callbacks.onMouseLeave);\n            return callbacks;\n        },\n        [change, customCallbacks, markHover, side, unmarkHover]\n    );\n    return callbacks;\n};\n\nconst renderCells = args => {\n    const {\n        change,\n        side,\n        selected,\n        tokens,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        anchorID,\n        gutterAnchor,\n        gutterAnchorTarget,\n        hideGutter,\n        hover,\n        renderToken,\n        renderGutter,\n    } = args;\n\n    if (!change) {\n        const gutterClassNameValue = classNames('diff-gutter', 'diff-gutter-omit', gutterClassName);\n        const codeClassNameValue = classNames('diff-code', 'diff-code-omit', codeClassName);\n\n        return [\n            !hideGutter && <td key=\"gutter\" className={gutterClassNameValue} />,\n            <td key=\"code\" className={codeClassNameValue} />,\n        ];\n    }\n\n    const {type, content} = change;\n    const sideName = side === SIDE_OLD ? 'old' : 'new';\n    const gutterClassNameValue = classNames(\n        'diff-gutter',\n        `diff-gutter-${type}`,\n        {\n            'diff-gutter-selected': selected,\n            ['diff-line-hover-' + sideName]: hover,\n        },\n        gutterClassName\n    );\n    const gutterOptions = {\n        change,\n        side: sideName,\n        inHoverState: hover,\n        renderDefault: renderDefaultBy(change, sideName),\n        wrapInAnchor: wrapInAnchorBy(gutterAnchor, gutterAnchorTarget),\n    };\n    const gutterProps = {\n        id: anchorID,\n        className: gutterClassNameValue,\n        children: renderGutter(gutterOptions),\n        ...gutterEvents,\n    };\n    const codeClassNameValue = classNames(\n        'diff-code',\n        `diff-code-${type}`,\n        {\n            'diff-code-selected': selected,\n            ['diff-line-hover-' + sideName]: hover,\n        },\n        codeClassName\n    );\n\n    return [\n        !hideGutter && <td key=\"gutter\" {...gutterProps} />,\n        <CodeCell\n            key=\"code\"\n            className={codeClassNameValue}\n            text={content}\n            tokens={tokens}\n            renderToken={renderToken}\n            {...codeEvents}\n        />,\n    ];\n};\n\nconst SplitChange = props => {\n    const {\n        className,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        oldChange,\n        newChange,\n        oldSelected,\n        newSelected,\n        oldTokens,\n        newTokens,\n        monotonous,\n        hideGutter,\n        generateAnchorID,\n        gutterAnchor,\n        renderToken,\n        renderGutter,\n    } = props;\n\n    const [hover, setHover] = useState('');\n    const oldGutterEvents = useCallbackOnSide('old', setHover, oldChange, gutterEvents);\n    const newGutterEvents = useCallbackOnSide('new', setHover, newChange, gutterEvents);\n    const oldCodeEvents = useCallbackOnSide('old', setHover, oldChange, codeEvents);\n    const newCodeEvents = useCallbackOnSide('new', setHover, newChange, codeEvents);\n    const oldAnchorID = oldChange && generateAnchorID(oldChange);\n    const newAnchorID = newChange && generateAnchorID(newChange);\n    const commons = {\n        monotonous,\n        hideGutter,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        renderToken,\n        renderGutter,\n    };\n    const oldArgs = {\n        ...commons,\n        change: oldChange,\n        side: SIDE_OLD,\n        selected: oldSelected,\n        tokens: oldTokens,\n        gutterEvents: oldGutterEvents,\n        codeEvents: oldCodeEvents,\n        anchorID: oldAnchorID,\n        gutterAnchor: gutterAnchor,\n        gutterAnchorTarget: oldAnchorID,\n        hover: hover === 'old',\n    };\n    const newArgs = {\n        ...commons,\n        change: newChange,\n        side: SIDE_NEW,\n        selected: newSelected,\n        tokens: newTokens,\n        gutterEvents: newGutterEvents,\n        codeEvents: newCodeEvents,\n        anchorID: oldChange === newChange ? undefined : newAnchorID,\n        gutterAnchor: gutterAnchor,\n        gutterAnchorTarget: oldChange === newChange ? oldAnchorID : newAnchorID,\n        hover: hover === 'new',\n    };\n\n    if (monotonous) {\n        return (\n            <tr className={classNames('diff-line', className)}>\n                {renderCells(oldChange ? oldArgs : newArgs)}\n            </tr>\n        );\n    }\n\n    const lineTypeClassName = ((oldChange, newChange) => {\n        if (oldChange && !newChange) {\n            return 'diff-line-old-only';\n        }\n\n        if (!oldChange && newChange) {\n            return 'diff-line-new-only';\n        }\n\n        if (oldChange === newChange) {\n            return 'diff-line-normal';\n        }\n\n        return 'diff-line-compare';\n    })(oldChange, newChange);\n\n    return (\n        <tr className={classNames('diff-line', lineTypeClassName, className)}>\n            {renderCells(oldArgs)}\n            {renderCells(newArgs)}\n        </tr>\n    );\n};\n\n\nSplitChange.propTypes = {\n    oldSelected: PropTypes.bool.isRequired,\n    newSelected: PropTypes.bool.isRequired,\n    oldTokens: PropTypes.arrayOf(PropTypes.object),\n    newTokens: PropTypes.arrayOf(PropTypes.object),\n};\n\nSplitChange.defaultProps = {\n    oldTokens: null,\n    newTokens: null,\n};\n\nexport default memo(SplitChange);\n","const SplitWidget = ({oldElement, newElement, monotonous, hideGutter}) => {\n    if (monotonous) {\n        return (\n            <tr className=\"diff-widget\">\n                <td colSpan={hideGutter ? 1 : 2} className=\"diff-widget-content\">\n                    {oldElement || newElement}\n                </td>\n            </tr>\n        );\n    }\n\n    if (oldElement === newElement) {\n        return (\n            <tr className=\"diff-widget\">\n                <td colSpan={hideGutter ? 2 : 4} className=\"diff-widget-content\">\n                    {oldElement}\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <tr className=\"diff-widget\">\n            <td colSpan={hideGutter ? 1 : 2} className=\"diff-widget-content\">\n                {oldElement}\n            </td>\n            <td colSpan={hideGutter ? 1 : 2} className=\"diff-widget-content\">\n                {newElement}\n            </td>\n        </tr>\n    );\n};\n\nexport default SplitWidget;\n","import classNames from 'classnames';\nimport {getChangeKey, computeOldLineNumber, computeNewLineNumber} from '../../utils';\nimport SplitChange from './SplitChange';\nimport SplitWidget from './SplitWidget';\n\nconst keyForPair = (x, y) => {\n    const keyForX = x ? getChangeKey(x) : '00';\n    const keyForY = y ? getChangeKey(y) : '00';\n    return keyForX + keyForY;\n};\n\nconst groupElements = (changes, widgets) => {\n    const findWidget = change => {\n        if (!change) {\n            return null;\n        }\n\n        const key = getChangeKey(change);\n        return widgets[key] || null;\n    };\n    const elements = [];\n\n    // This could be a very complex reduce call, use `for` loop seems to make it a little more readable\n    for (let i = 0; i < changes.length; i++) {\n        const current = changes[i];\n\n        // A normal change is displayed on both side\n        if (current.isNormal) {\n            elements.push(['change', keyForPair(current, current), current, current]);\n        }\n        else if (current.isDelete) {\n            const next = changes[i + 1];\n            // If an insert change is following a elete change, they should be displayed side by side\n            if (next && next.isInsert) {\n                i = i + 1;\n                elements.push(['change', keyForPair(current, next), current, next]);\n            }\n            else {\n                elements.push(['change', keyForPair(current, null), current, null]);\n            }\n        }\n        else {\n            elements.push(['change', keyForPair(null, current), null, current]);\n        }\n\n        const rowChanges = elements[elements.length - 1];\n        const [oldWidget, newWidget] = rowChanges.slice(2).map(findWidget);\n        if (oldWidget || newWidget) {\n            const key = rowChanges[1];\n            elements.push(['widget', key, oldWidget, newWidget]);\n        }\n    }\n\n    return elements;\n};\n\nconst renderRow = ([type, key, oldValue, newValue], props) => {\n    const {\n        selectedChanges,\n        monotonous,\n        hideGutter,\n        tokens,\n        lineClassName,\n        ...changeProps\n    } = props;\n\n    if (type === 'change') {\n        const oldSelected = oldValue ? selectedChanges.includes(getChangeKey(oldValue)) : false;\n        const newSelected = newValue ? selectedChanges.includes(getChangeKey(newValue)) : false;\n        const oldTokens = (oldValue && tokens) ? tokens.old[computeOldLineNumber(oldValue) - 1] : null;\n        const newTokens = (newValue && tokens) ? tokens.new[computeNewLineNumber(newValue) - 1] : null;\n\n        return (\n            <SplitChange\n                key={`change${key}`}\n                className={lineClassName}\n                oldChange={oldValue}\n                newChange={newValue}\n                monotonous={monotonous}\n                hideGutter={hideGutter}\n                oldSelected={oldSelected}\n                newSelected={newSelected}\n                oldTokens={oldTokens}\n                newTokens={newTokens}\n                {...changeProps}\n            />\n        );\n    }\n    else if (type === 'widget') {\n        return (\n            <SplitWidget\n                key={`widget${key}`}\n                monotonous={monotonous}\n                hideGutter={hideGutter}\n                oldElement={oldValue}\n                newElement={newValue}\n            />\n        );\n    }\n\n    return null;\n};\n\nconst SplitHunk = props => {\n    const {\n        hunk,\n        widgets,\n        className,\n        ...childrenProps\n    } = props;\n    const elements = groupElements(hunk.changes, widgets);\n\n    return (\n        <tbody className={classNames('diff-hunk', className)}>\n            {elements.map(item => renderRow(item, childrenProps))}\n        </tbody>\n    );\n};\n\nexport default SplitHunk;\n","import PropTypes from 'prop-types';\nimport {useDiffSettings} from '../context';\nimport UnifiedHunk from './UnifiedHunk';\nimport SplitHunk from './SplitHunk';\n\nconst Hunk = ({hunk, className, ...props}) => {\n    const {gutterType, ...context} = useDiffSettings();\n    const hideGutter = gutterType === 'none';\n    const gutterAnchor = gutterType === 'anchor';\n    const RenderingHunk = context.viewType === 'unified' ? UnifiedHunk : SplitHunk;\n\n    return (\n        <RenderingHunk\n            {...context}\n            {...props}\n            hunk={hunk}\n            hideGutter={hideGutter}\n            gutterAnchor={gutterAnchor}\n            className={className}\n        />\n    );\n};\n\nHunk.propTypes = (() => {\n    const change = {\n        type: PropTypes.oneOf(['delete', 'insert', 'normal']).isRequired,\n        content: PropTypes.string.isRequired,\n        isNormal: PropTypes.bool,\n        isInsert: PropTypes.bool,\n        isDelete: PropTypes.bool,\n        lineNumber: PropTypes.number,\n        oldLineNumber: PropTypes.number,\n        newLineNumber: PropTypes.number,\n    };\n\n    const hunk = {\n        oldStart: PropTypes.number.isRequired,\n        oldLines: PropTypes.number.isRequired,\n        newStart: PropTypes.number.isRequired,\n        newLines: PropTypes.number.isRequired,\n        content: PropTypes.string.isRequired,\n        changes: PropTypes.arrayOf(PropTypes.shape(change)).isRequired,\n    };\n\n    return {\n        hunk: PropTypes.shape(hunk).isRequired,\n        className: PropTypes.string,\n        lineClassName: PropTypes.string,\n        gutterClassName: PropTypes.string,\n        contentClassName: PropTypes.string,\n        gutterEvents: PropTypes.object,\n        codeEvents: PropTypes.object,\n    };\n})();\n\nHunk.defaultProps = {\n    className: '',\n    lineClassName: '',\n    gutterClassName: '',\n    contentClassName: '',\n    gutterEvents: {},\n    codeEvents: {},\n};\n\nexport default Hunk;\n","import {memo, useRef, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {Provider} from '../context';\nimport Hunk from '../Hunk';\n\nconst noop = () => {}; // eslint-disable-line no-empty-function\n\nconst findClosest = (target, className) => {\n    while (target && target !== document && !target.classList.contains(className)) {\n        target = target.parentNode; // eslint-disable-line no-param-reassign\n    }\n\n    return target === document ? null : target;\n};\n\nconst setUserSelectStyle = (element, selectable) => {\n    const value = selectable ? 'auto' : 'none';\n\n    if (element.style.userSelect !== value) {\n        element.style.userSelect = value; // eslint-disable-line no-param-reassign\n    }\n};\n\nconst Diff = props => {\n    const root = useRef(null);\n    const enableColumnSelection = useCallback(\n        ({target, button}) => {\n            if (button !== 0) {\n                return;\n            }\n\n            const closestCell = findClosest(target, 'diff-code');\n\n            if (!closestCell) {\n                return;\n            }\n\n            window.getSelection().removeAllRanges();\n\n            const index = [...closestCell.parentNode.children].indexOf(closestCell);\n\n            if (index !== 1 && index !== 3) {\n                return;\n            }\n\n            const lines = root.current.querySelectorAll('.diff-line');\n            for (const line of lines) {\n                const cells = line.children;\n                setUserSelectStyle(cells[1], index === 1);\n                setUserSelectStyle(cells[3], index === 3);\n            }\n        },\n        []\n    );\n\n    const {diffType, children, className, optimizeSelection, hunks, ...remainings} = props;\n    const {gutterType, viewType} = remainings;\n    const hideGutter = gutterType === 'none';\n    const monotonous = diffType === 'add' || diffType === 'delete';\n    const onTableMouseDown = (viewType === 'split' && !monotonous && optimizeSelection) ? enableColumnSelection : noop;\n    const cols = ((viewType, monotonous) => {\n        if (viewType === 'unified') {\n            return (\n                <colgroup>\n                    {!hideGutter && <col className=\"diff-gutter-col\" />}\n                    {!hideGutter && <col className=\"diff-gutter-col\" />}\n                    <col />\n                </colgroup>\n            );\n        }\n\n        if (monotonous) {\n            return (\n                <colgroup>\n                    {!hideGutter && <col className=\"diff-gutter-col\" />}\n                    <col />\n                </colgroup>\n            );\n        }\n\n        return (\n            <colgroup>\n                {!hideGutter && <col className=\"diff-gutter-col\" />}\n                <col />\n                {!hideGutter && <col className=\"diff-gutter-col\" />}\n                <col />\n            </colgroup>\n        );\n    })(props.viewType, monotonous);\n\n    return (\n        <Provider value={{...remainings, monotonous}}>\n            <table\n                ref={root}\n                className={classNames('diff', `diff-${viewType}`, className)}\n                onMouseDown={onTableMouseDown}\n            >\n                {cols}\n                {children(hunks)}\n            </table>\n        </Provider>\n    );\n};\n\nDiff.propTypes = {\n    diffType: PropTypes.oneOf(['add', 'delete', 'modify', 'rename', 'copy']).isRequired,\n    viewType: PropTypes.oneOf(['unified', 'split']).isRequired,\n    hunks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    gutterType: PropTypes.oneOf(['default', 'none', 'anchor']),\n    generateAnchorID: PropTypes.func,\n    selectedChanges: PropTypes.arrayOf(PropTypes.string),\n    widgets: PropTypes.objectOf(PropTypes.node),\n    optimizeSelection: PropTypes.bool,\n    className: PropTypes.string,\n    renderToken: PropTypes.func,\n    renderGutter: PropTypes.func,\n    children: PropTypes.func,\n};\n\nDiff.defaultProps = {\n    gutterType: 'default',\n    optimizeSelection: false,\n    selectedChanges: [],\n    widgets: {},\n    className: '',\n    renderToken: undefined,\n    renderGutter({renderDefault, wrapInAnchor}) {\n        return wrapInAnchor(renderDefault());\n    },\n    generateAnchorID() {\n        return undefined;\n    },\n    children(hunks) {\n        const key = hunk => `-${hunk.oldStart},${hunk.oldLines} +${hunk.newStart},${hunk.newLines}`;\n        return hunks.map(hunk => <Hunk key={key(hunk)} hunk={hunk} />);\n    },\n};\n\nexport default memo(Diff);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import {Children} from 'react';\nimport classNames from 'classnames';\n\nconst SplitDecoration = ({hideGutter, monotonous, className, gutterClassName, contentClassName, children}) => {\n    const computedClassName = classNames('diff-decoration', className);\n    const computedGutterClassName = classNames('diff-decoration-gutter', gutterClassName);\n    const computedContentClassName = classNames('diff-decoration-content', contentClassName);\n    const columnCount = (hideGutter ? 2 : 4) / (monotonous ? 2 : 1);\n    const headerContentColSpan = columnCount - (hideGutter ? 0 : 1);\n\n    // One element spans all gutter and content cells\n    if (Children.count(children) === 1) {\n        return (\n            <tbody className={computedClassName}>\n                <tr>\n                    <td colSpan={columnCount} className={computedContentClassName}>\n                        {children}\n                    </td>\n                </tr>\n            </tbody>\n        );\n    }\n\n    const [gutter, content] = children;\n\n    return (\n        <tbody className={computedClassName}>\n            <tr>\n                {!hideGutter && <td className={computedGutterClassName}>{gutter}</td>}\n                <td colSpan={headerContentColSpan} className={computedContentClassName}>{content}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nexport default SplitDecoration;\n","import {Children} from 'react';\nimport classNames from 'classnames';\n\nconst UnifiedDecoration = ({hideGutter, className, gutterClassName, contentClassName, children}) => {\n    const computedClassName = classNames('diff-decoration', className);\n    const computedGutterClassName = classNames('diff-decoration-gutter', gutterClassName);\n    const computedContentClassName = classNames('diff-decoration-content', contentClassName);\n\n    // One element spans all gutter and content cells\n    if (Children.count(children) === 1) {\n        return (\n            <tbody className={computedClassName}>\n                <tr>\n                    <td colSpan={hideGutter ? 1 : 3} className={computedContentClassName}>\n                        {children}\n                    </td>\n                </tr>\n            </tbody>\n        );\n    }\n\n    const [gutter, content] = children;\n\n    return (\n        <tbody className={computedClassName}>\n            <tr>\n                {!hideGutter && <td colSpan={2} className={computedGutterClassName}>{gutter}</td>}\n                <td className={computedContentClassName}>{content}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nexport default UnifiedDecoration;\n","import {Children} from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport {useDiffSettings} from '../context';\nimport SplitDecoration from './SplitDecoration';\nimport UnifiedDecoration from './UnifiedDecoration';\n\nconst Decoration = props => {\n    const childrenCount = Children.count(props.children);\n\n    warning(\n        childrenCount <= 2,\n        'Decoration only accepts a maxium of 2 children'\n    );\n\n    warning(\n        childrenCount < 2 || !props.hideGutter,\n        'Gutter element in decoration will not be rendered since hideGutter prop is set to true'\n    );\n\n    const {viewType, gutterType, monotonous} = useDiffSettings();\n    const RenderingDecoration = viewType === 'split' ? SplitDecoration : UnifiedDecoration;\n\n    return (\n        <RenderingDecoration\n            hideGutter={gutterType === 'none'}\n            monotonous={monotonous}\n            {...props}\n        />\n    );\n};\n\nDecoration.propTypes = {\n    className: PropTypes.string,\n    gutterClassName: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node.isRequired,\n};\n\nDecoration.defaultProps = {\n    className: '',\n    gutterClassName: '',\n    contentClassName: '',\n};\n\nexport default Decoration;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n","var createFlow = require('./_createFlow');\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nmodule.exports = flow;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","import {flatMap, last, keyBy} from 'lodash';\nimport {computeOldLineNumber, computeNewLineNumber} from '../utils';\n\n// This function mutates `linesOfCode` argument.\nconst applyHunk = (linesOfCode, {newStart, changes}) => {\n    // Within each hunk, changes are continous, so we can use a sequential algorithm here.\n    //\n    // When `linesOfCode` is received here, it has already patched by previous hunk,\n    // thus the starting line number has changed due to possible unbanlanced deletions and insertions,\n    // we should use `newStart` as the first line number of current reduce.\n    const [patchedLines] = changes.reduce(\n        ([lines, cursor], {content, isInsert, isDelete}) => {\n            if (isDelete) {\n                lines.splice(cursor, 1);\n                return [lines, cursor];\n            }\n\n            if (isInsert) {\n                lines.splice(cursor, 0, content);\n            }\n            return [lines, cursor + 1];\n        },\n        [linesOfCode, newStart - 1]\n    );\n\n    return patchedLines;\n};\n\nconst applyDiff = (oldSource, hunks) => {\n    // `hunks` must be ordered here.\n    const patchedLines = hunks.reduce(applyHunk, oldSource.split('\\n'));\n    return patchedLines.join('\\n');\n};\n\nconst mapChanges = (changes, side, toValue) => {\n    if (!changes.length) {\n        return [];\n    }\n\n    const computeLineNumber = side === 'old' ? computeOldLineNumber : computeNewLineNumber;\n    const changesByLineNumber = keyBy(changes, computeLineNumber);\n    const maxLineNumber = computeLineNumber(last(changes));\n    return Array.from({length: maxLineNumber}).map((value, i) => toValue(changesByLineNumber[i + 1]));\n};\n\nconst groupChanges = hunks => {\n    const changes = flatMap(hunks, hunk => hunk.changes);\n    return changes.reduce(\n        ([oldChanges, newChanges], change) => {\n            if (change.isNormal) {\n                oldChanges.push(change);\n                newChanges.push(change);\n            }\n            else if (change.isDelete) {\n                oldChanges.push(change);\n            }\n            else {\n                newChanges.push(change);\n            }\n\n            return [oldChanges, newChanges];\n        },\n        [[], []]\n    );\n};\n\nconst toTextPair = hunks => {\n    const [oldChanges, newChanges] = groupChanges(hunks);\n    const toText = change => (change ? change.content : '');\n    const oldText = mapChanges(oldChanges, 'old', toText).join('\\n');\n    const newText = mapChanges(newChanges, 'new', toText).join('\\n');\n\n    return [oldText, newText];\n};\n\nconst createRoot = children => ({type: 'root', children: children});\n\nexport default (hunks, {highlight, refractor, oldSource, language}) => {\n    if (oldSource) {\n        const newSource = applyDiff(oldSource, hunks);\n        const highlightText = highlight\n            ? (text, language) => refractor.highlight(text, language)\n            : text => [{type: 'text', value: text}];\n\n        return [\n            createRoot(highlightText(oldSource, language)),\n            createRoot(highlightText(newSource, language)),\n        ];\n    }\n\n    const textPair = toTextPair(hunks);\n    const toTree = highlight\n        ? text => createRoot(refractor.highlight(text, language))\n        : text => createRoot([{type: 'text', value: text}]);\n\n    return textPair.map(toTree);\n};\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","import {last} from 'lodash';\n\nexport const clone = path => path.map(node => ({...node}));\n\nexport const replace = (path, leaf) => [...clone(path.slice(0, -1)), leaf];\n\nexport const wrap = (path, parent) => [parent, ...clone(path)];\n\nexport const split = (path, splitStart, splitEnd, wrapSplitNode) => {\n    const parents = path.slice(0, -1);\n    const leaf = last(path);\n    const output = [];\n\n    if (splitEnd <= 0 || splitStart >= leaf.value.length) {\n        return [path];\n    }\n\n    const split = (start, end) => {\n        const value = leaf.value.slice(start, end);\n        return [...parents, {...leaf, value}];\n    };\n\n    if (splitStart > 0) {\n        const head = split(0, splitStart);\n        output.push(clone(head));\n    }\n\n    const body = split(Math.max(splitStart, 0), splitEnd);\n    output.push(wrapSplitNode ? wrap(body, wrapSplitNode) : clone(body));\n\n    if (splitEnd < leaf.value.length) {\n        const tail = split(splitEnd);\n        output.push(clone(tail));\n    }\n\n    return output;\n};\n","import {last, omit} from 'lodash';\nimport {clone, replace} from './utils';\n\nconst treeToPathList = (node, output = [], path = []) => {\n    const nodeToUse = omit(node, 'children');\n\n    if (node.children) {\n        path.push(nodeToUse);\n        for (const child of node.children) {\n            treeToPathList(child, output, path);\n        }\n        path.pop();\n    }\n    else {\n        output.push(clone([...path.slice(1), nodeToUse]));\n    }\n\n    return output;\n};\n\nconst splitPathToLines = path => {\n    const leaf = last(path);\n\n    if (!leaf.value.includes('\\n')) {\n        return [path];\n    }\n\n    const linesOfText = leaf.value.split('\\n');\n    return linesOfText.map(line => replace(path, {...leaf, value: line}));\n};\n\nconst splitByLineBreak = paths => paths.reduce(\n    (lines, path) => {\n        const currentLine = last(lines);\n        const [currentRemaining, ...nextLines] = splitPathToLines(path);\n        return [\n            ...lines.slice(0, -1),\n            [...currentLine, currentRemaining],\n            ...nextLines.map(path => [path]),\n        ];\n    },\n    [[]]\n);\n\nexport default tree => {\n    const paths = treeToPathList(tree);\n    const linesOfPaths = splitByLineBreak(paths);\n    return linesOfPaths;\n};\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import {last, isEqual, omit} from 'lodash';\n\nconst areNodesMeregable = (x, y) => {\n    if (x.type !== y.type) {\n        return false;\n    }\n\n    if (x.type === 'text') {\n        return true;\n    }\n\n    if (!x.children || !y.children) {\n        return false;\n    }\n\n    const xBase = 'children' in x ? omit(x, 'children') : x;\n    const yBase = 'children' in y ? omit(y, 'children') : y;\n\n    return isEqual(xBase, yBase);\n};\n\nconst mergeNode = (x, y) => {\n    if ('value' in x) {\n        return {\n            ...x,\n            value: x.value + y.value,\n        };\n    }\n\n    return x;\n};\n\nconst attachNode = (parent, node) => {\n    const previousSibling = last(parent.children);\n\n    if (previousSibling && areNodesMeregable(previousSibling, node)) {\n        /* eslint-disable no-param-reassign */\n        parent.children[parent.children.length - 1] = mergeNode(previousSibling, node);\n        /* eslint-enable no-param-reassign */\n    }\n    else {\n        parent.children.push(node);\n    }\n\n    return last(parent.children);\n};\n\nexport default pathList => {\n    const root = {type: 'root', children: []};\n\n    for (const path of pathList) {\n        path.reduce(\n            (parent, node, i) => {\n                const nodeToUse = i === path.length - 1 ? {...node} : {...node, children: []};\n                return attachNode(parent, nodeToUse);\n            },\n            root\n        );\n    }\n\n    return root;\n};\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","/**\n * @file 在高亮的语法节点上插入代码定义与引用的信息\n * @author zhanglili\n */\n\nimport {last, isEmpty, groupBy} from 'lodash';\nimport {split} from './utils';\n\nconst splitPathToEncloseRange = (paths, node) => {\n    const {start, length, properties} = node;\n    const rangeEnd = start + length;\n    const [output] = paths.reduce(\n        ([output, nodeStart], path) => {\n            const leaf = last(path);\n            const nodeEnd = nodeStart + leaf.value.length;\n\n            if (nodeStart > rangeEnd || nodeEnd < start) {\n                output.push(path);\n            }\n            else {\n                // it should be just node in next major release\n                const wrapNode = {...node, ...properties};\n                const segments = split(path, start - nodeStart, rangeEnd - nodeStart, wrapNode);\n                output.push(...segments);\n            }\n\n            return [output, nodeEnd];\n        },\n        [[], 0]\n    );\n\n    return output;\n};\n\nconst pickRangesFromPath = (paths, ranges) => {\n    if (isEmpty(ranges)) {\n        return paths;\n    }\n\n    return ranges.reduce(splitPathToEncloseRange, paths);\n};\n\nconst process = (linesOfPaths, ranges) => {\n    const rangesByLine = groupBy(ranges, 'lineNumber');\n    return linesOfPaths.map((line, i) => pickRangesFromPath(line, rangesByLine[i + 1]));\n};\n\nexport default (oldRanges, newRanges) => ([oldLinesOfPaths, newLinesOfPaths]) => [\n    process(oldLinesOfPaths, oldRanges),\n    process(newLinesOfPaths, newRanges),\n];\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff_match_patch.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push([DIFF_EQUAL, precontext]);\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push([diff_type, diff_text]);\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diff_type, diff_text]);\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","import {findIndex, flatMap, last, flatten} from 'lodash';\nimport DiffMatchPatch from 'diff-match-patch';\nimport pickRanges from './pickRanges';\n\nconst {DIFF_EQUAL, DIFF_DELETE, DIFF_INSERT} = DiffMatchPatch;\n\nconst findChangeBlocks = changes => {\n    const start = findIndex(changes, change => !change.isNormal);\n\n    if (start === -1) {\n        return [];\n    }\n\n    const end = findIndex(changes, change => change.isNormal, start);\n\n    if (end === -1) {\n        return [changes.slice(start)];\n    }\n\n    return [\n        changes.slice(start, end),\n        ...findChangeBlocks(changes.slice(end)),\n    ];\n};\n\nconst groupDiffs = diffs => diffs.reduce(\n    ([oldDiffs, newDiffs], diff) => {\n        const [type] = diff;\n\n        switch (type) {\n            case DIFF_INSERT:\n                newDiffs.push(diff);\n                break;\n            case DIFF_DELETE:\n                oldDiffs.push(diff);\n                break;\n            default:\n                oldDiffs.push(diff);\n                newDiffs.push(diff);\n                break;\n        }\n\n        return [oldDiffs, newDiffs];\n    },\n    [[], []]\n);\n\nconst splitDiffToLines = diffs => diffs.reduce(\n    (lines, [type, value]) => {\n        const currentLines = value.split('\\n');\n\n        const [currentLineRemaining, ...nextLines] = currentLines.map(line => [type, line]);\n        const next = [\n            ...lines.slice(0, -1),\n            [...last(lines), currentLineRemaining],\n            ...nextLines.map(line => [line]),\n        ];\n        return next;\n    },\n    [[]]\n);\n\nconst diffsToEdits = (diffs, lineNumber) => {\n    const output = diffs.reduce(\n        (output, diff) => {\n            const [edits, start] = output;\n            const [type, value] = diff;\n            if (type !== DIFF_EQUAL) {\n                const edit = {\n                    type: 'edit',\n                    lineNumber: lineNumber,\n                    start: start,\n                    length: value.length,\n                };\n                edits.push(edit);\n            }\n\n            return [edits, start + value.length];\n        },\n        [[], 0]\n    );\n\n    return output[0];\n};\n\nconst convertToLinesOfEdits = (linesOfDiffs, startLineNumber) => flatMap(\n    linesOfDiffs,\n    (diffs, i) => diffsToEdits(diffs, startLineNumber + i)\n);\n\nconst diffText = (x, y) => {\n    const dmp = new DiffMatchPatch();\n    const diffs = dmp.diff_main(x, y);\n    dmp.diff_cleanupSemantic(diffs);\n\n    if (diffs.length <= 1) {\n        return [[], []];\n    }\n\n    return groupDiffs(diffs);\n};\n\nconst diffChangeBlock = changes => {\n    const [oldSource, newSource] = changes.reduce(\n        ([oldSource, newSource], {isDelete, content}) => (\n            isDelete\n                ? [oldSource + (oldSource ? '\\n' : '') + content, newSource]\n                : [oldSource, newSource + (newSource ? '\\n' : '') + content]\n        ),\n        ['', '']\n    );\n\n    const [oldDiffs, newDiffs] = diffText(oldSource, newSource);\n\n    if (oldDiffs.length === 0 && newDiffs.length === 0) {\n        return [oldDiffs, newDiffs];\n    }\n\n    const getLineNumber = change => change && change.lineNumber;\n    const oldStartLineNumber = getLineNumber(changes.find(change => change.isDelete));\n    const newStartLineNumber = getLineNumber(changes.find(change => change.isInsert));\n    const oldEdits = convertToLinesOfEdits(splitDiffToLines(oldDiffs), oldStartLineNumber);\n    const newEdits = convertToLinesOfEdits(splitDiffToLines(newDiffs), newStartLineNumber);\n\n    return [oldEdits, newEdits];\n};\n\nconst diffByLine = changes => changes.reduce(\n    ([oldEdits, newEdits, previousChange], currentChange) => {\n        if (!previousChange.isDelete || !currentChange.isInsert) {\n            return [oldEdits, newEdits, currentChange];\n        }\n\n        const [oldDiffs, newDiffs] = diffText(previousChange.content, currentChange.content);\n        return [\n            oldEdits.concat(diffsToEdits(oldDiffs, previousChange.lineNumber)),\n            newEdits.concat(diffsToEdits(newDiffs, currentChange.lineNumber)),\n            currentChange,\n        ];\n    },\n    [[], [], {}]\n);\n\nexport default (hunks, {type = 'block'} = {}) => {\n    const changeBlocks = flatMap(hunks.map(hunk => hunk.changes), findChangeBlocks);\n    const findEdits = type === 'block' ? diffChangeBlock : diffByLine;\n\n    const [oldEdits, newEdits] = changeBlocks.map(findEdits).reduce(\n        ([oldEdits, newEdits], [currentOld, currentNew]) => [\n            oldEdits.concat(currentOld),\n            newEdits.concat(currentNew),\n        ],\n        [[], []]\n    );\n\n    return pickRanges(flatten(oldEdits), flatten(newEdits));\n};\n","import {flatMap, last} from 'lodash';\nimport {replace} from './utils';\n\nconst markInPaths = (word, name, replacement) => paths => flatMap(\n    paths,\n    path => {\n        const leaf = last(path);\n\n        if (!leaf.value.includes(word)) {\n            return [path];\n        }\n\n        const segments = leaf.value.split(word);\n\n        return segments.reduce(\n            (output, text, i) => {\n                if (i !== 0) {\n                    output.push(replace(path, {type: 'mark', markType: name, value: replacement}));\n                }\n\n                if (text) {\n                    output.push(replace(path, {...leaf, value: text}));\n                }\n\n                return output;\n            },\n            []\n        );\n    }\n);\n\nexport default (word, name, replacement = word) => {\n    const mark = markInPaths(word, name, replacement);\n\n    return ([oldLinesOfPaths, newLinesOfPaths]) => [\n        oldLinesOfPaths.map(mark),\n        newLinesOfPaths.map(mark),\n    ];\n};\n","import {flow} from 'lodash';\nimport toTokenTrees from './toTokenTrees';\nimport normalizeToLines from './normalizeToLines';\nimport backToTree from './backToTree';\n\nexport const tokenize = (hunks, options) => {\n    const {\n        highlight = false,\n        refractor,\n        oldSource,\n        language,\n        enhancers = [],\n    } = options;\n\n    const tokenTreesPair = toTokenTrees(hunks, {highlight, refractor, oldSource, language});\n    const linesOfPathsPair = tokenTreesPair.map(normalizeToLines);\n\n    const enhance = flow(enhancers);\n    const enhancedLinesOfPathsPair = enhance(linesOfPathsPair);\n    const [oldTrees, newTrees] = enhancedLinesOfPathsPair.map(paths => paths.map(backToTree));\n    return {\n        old: oldTrees.map(root => root.children),\n        new: newTrees.map(root => root.children),\n    };\n};\n\nexport pickRanges from './pickRanges';\n\nexport markEdits from './markEdits';\n\nexport markWord from './markWord';\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar createChangeEmitter = exports.createChangeEmitter = function createChangeEmitter() {\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  function listen(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function () {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  function emit() {\n    currentListeners = nextListeners;\n    var listeners = currentListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(listeners, arguments);\n    }\n  }\n\n  return {\n    listen: listen,\n    emit: emit\n  };\n};","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import React, { createFactory, Component, createElement } from 'react';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport shallowEqual from 'fbjs/lib/shallowEqual';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { polyfill } from 'react-lifecycles-compat';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { createChangeEmitter } from 'change-emitter';\nimport $$observable from 'symbol-observable';\n\nvar setStatic = function setStatic(key, value) {\n  return function (BaseComponent) {\n    /* eslint-disable no-param-reassign */\n    BaseComponent[key] = value;\n    /* eslint-enable no-param-reassign */\n\n    return BaseComponent;\n  };\n};\n\nvar setDisplayName = function setDisplayName(displayName) {\n  return setStatic('displayName', displayName);\n};\n\nvar getDisplayName = function getDisplayName(Component$$1) {\n  if (typeof Component$$1 === 'string') {\n    return Component$$1;\n  }\n\n  if (!Component$$1) {\n    return undefined;\n  }\n\n  return Component$$1.displayName || Component$$1.name || 'Component';\n};\n\nvar wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {\n  return hocName + \"(\" + getDisplayName(BaseComponent) + \")\";\n};\n\nvar mapProps = function mapProps(propsMapper) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var MapProps = function MapProps(props) {\n      return factory(propsMapper(props));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'mapProps'))(MapProps);\n    }\n\n    return MapProps;\n  };\n};\n\nvar withProps = function withProps(input) {\n  var hoc = mapProps(function (props) {\n    return _extends({}, props, typeof input === 'function' ? input(props) : input);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withProps'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar pick = function pick(obj, keys) {\n  var result = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (obj.hasOwnProperty(key)) {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\nvar withPropsOnChange = function withPropsOnChange(shouldMapOrKeys, propsMapper) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n    var shouldMap = typeof shouldMapOrKeys === 'function' ? shouldMapOrKeys : function (props, nextProps) {\n      return !shallowEqual(pick(props, shouldMapOrKeys), pick(nextProps, shouldMapOrKeys));\n    };\n\n    var WithPropsOnChange =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithPropsOnChange, _Component);\n\n      function WithPropsOnChange() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          computedProps: propsMapper(_this.props),\n          prevProps: _this.props\n        };\n        return _this;\n      }\n\n      WithPropsOnChange.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n        if (shouldMap(prevState.prevProps, nextProps)) {\n          return {\n            computedProps: propsMapper(nextProps),\n            prevProps: nextProps\n          };\n        }\n\n        return {\n          prevProps: nextProps\n        };\n      };\n\n      var _proto = WithPropsOnChange.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.state.computedProps));\n      };\n\n      return WithPropsOnChange;\n    }(Component);\n\n    polyfill(WithPropsOnChange);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withPropsOnChange'))(WithPropsOnChange);\n    }\n\n    return WithPropsOnChange;\n  };\n};\n\nvar mapValues = function mapValues(obj, func) {\n  var result = {};\n  /* eslint-disable no-restricted-syntax */\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      result[key] = func(obj[key], key);\n    }\n  }\n  /* eslint-enable no-restricted-syntax */\n\n\n  return result;\n};\n\nvar withHandlers = function withHandlers(handlers) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithHandlers =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithHandlers, _Component);\n\n      function WithHandlers() {\n        var _this;\n\n        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n          _args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n        _this.handlers = mapValues(typeof handlers === 'function' ? handlers(_this.props) : handlers, function (createHandler) {\n          return function () {\n            var handler = createHandler(_this.props);\n\n            if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {\n              console.error( // eslint-disable-line no-console\n              'withHandlers(): Expected a map of higher-order functions. ' + 'Refer to the docs for more info.');\n            }\n\n            return handler.apply(void 0, arguments);\n          };\n        });\n        return _this;\n      }\n\n      var _proto = WithHandlers.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.handlers));\n      };\n\n      return WithHandlers;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withHandlers'))(WithHandlers);\n    }\n\n    return WithHandlers;\n  };\n};\n\nvar defaultProps = function defaultProps(props) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var DefaultProps = function DefaultProps(ownerProps) {\n      return factory(ownerProps);\n    };\n\n    DefaultProps.defaultProps = props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'defaultProps'))(DefaultProps);\n    }\n\n    return DefaultProps;\n  };\n};\n\nvar omit = function omit(obj, keys) {\n  var rest = _extends({}, obj);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (rest.hasOwnProperty(key)) {\n      delete rest[key];\n    }\n  }\n\n  return rest;\n};\n\nvar renameProp = function renameProp(oldName, newName) {\n  var hoc = mapProps(function (props) {\n    var _extends2;\n\n    return _extends({}, omit(props, [oldName]), (_extends2 = {}, _extends2[newName] = props[oldName], _extends2));\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'renameProp'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar keys = Object.keys;\n\nvar mapKeys = function mapKeys(obj, func) {\n  return keys(obj).reduce(function (result, key) {\n    var val = obj[key];\n    /* eslint-disable no-param-reassign */\n\n    result[func(val, key)] = val;\n    /* eslint-enable no-param-reassign */\n\n    return result;\n  }, {});\n};\n\nvar renameProps = function renameProps(nameMap) {\n  var hoc = mapProps(function (props) {\n    return _extends({}, omit(props, keys(nameMap)), mapKeys(pick(props, keys(nameMap)), function (_, oldName) {\n      return nameMap[oldName];\n    }));\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'renameProps'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar flattenProp = function flattenProp(propName) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var FlattenProp = function FlattenProp(props) {\n      return factory(_extends({}, props, props[propName]));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'flattenProp'))(FlattenProp);\n    }\n\n    return FlattenProp;\n  };\n};\n\nvar withState = function withState(stateName, stateUpdaterName, initialState) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithState =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithState, _Component);\n\n      function WithState() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          stateValue: typeof initialState === 'function' ? initialState(_this.props) : initialState\n        };\n\n        _this.updateStateValue = function (updateFn, callback) {\n          return _this.setState(function (_ref) {\n            var stateValue = _ref.stateValue;\n            return {\n              stateValue: typeof updateFn === 'function' ? updateFn(stateValue) : updateFn\n            };\n          }, callback);\n        };\n\n        return _this;\n      }\n\n      var _proto = WithState.prototype;\n\n      _proto.render = function render() {\n        var _extends2;\n\n        return factory(_extends({}, this.props, (_extends2 = {}, _extends2[stateName] = this.state.stateValue, _extends2[stateUpdaterName] = this.updateStateValue, _extends2)));\n      };\n\n      return WithState;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withState'))(WithState);\n    }\n\n    return WithState;\n  };\n};\n\nvar withStateHandlers = function withStateHandlers(initialState, stateUpdaters) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithStateHandlers =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithStateHandlers, _Component);\n\n      function WithStateHandlers() {\n        var _this;\n\n        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n          _args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n        _this.state = typeof initialState === 'function' ? initialState(_this.props) : initialState;\n        _this.stateUpdaters = mapValues(stateUpdaters, function (handler) {\n          return function (mayBeEvent) {\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            // Having that functional form of setState can be called async\n            // we need to persist SyntheticEvent\n            if (mayBeEvent && typeof mayBeEvent.persist === 'function') {\n              mayBeEvent.persist();\n            }\n\n            _this.setState(function (state, props) {\n              return handler(state, props).apply(void 0, [mayBeEvent].concat(args));\n            });\n          };\n        });\n        return _this;\n      }\n\n      var _proto = WithStateHandlers.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.state, this.stateUpdaters));\n      };\n\n      return WithStateHandlers;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withStateHandlers'))(WithStateHandlers);\n    }\n\n    return WithStateHandlers;\n  };\n};\n\nvar noop = function noop() {};\n\nvar withReducer = function withReducer(stateName, dispatchName, reducer, initialState) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithReducer =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithReducer, _Component);\n\n      function WithReducer() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          stateValue: _this.initializeStateValue()\n        };\n\n        _this.dispatch = function (action, callback) {\n          if (callback === void 0) {\n            callback = noop;\n          }\n\n          return _this.setState(function (_ref) {\n            var stateValue = _ref.stateValue;\n            return {\n              stateValue: reducer(stateValue, action)\n            };\n          }, function () {\n            return callback(_this.state.stateValue);\n          });\n        };\n\n        return _this;\n      }\n\n      var _proto = WithReducer.prototype;\n\n      _proto.initializeStateValue = function initializeStateValue() {\n        if (initialState !== undefined) {\n          return typeof initialState === 'function' ? initialState(this.props) : initialState;\n        }\n\n        return reducer(undefined, {\n          type: '@@recompose/INIT'\n        });\n      };\n\n      _proto.render = function render() {\n        var _extends2;\n\n        return factory(_extends({}, this.props, (_extends2 = {}, _extends2[stateName] = this.state.stateValue, _extends2[dispatchName] = this.dispatch, _extends2)));\n      };\n\n      return WithReducer;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withReducer'))(WithReducer);\n    }\n\n    return WithReducer;\n  };\n};\n\nvar identity = function identity(Component$$1) {\n  return Component$$1;\n};\n\nvar branch = function branch(test, left, right) {\n  if (right === void 0) {\n    right = identity;\n  }\n\n  return function (BaseComponent) {\n    var leftFactory;\n    var rightFactory;\n\n    var Branch = function Branch(props) {\n      if (test(props)) {\n        leftFactory = leftFactory || createFactory(left(BaseComponent));\n        return leftFactory(props);\n      }\n\n      rightFactory = rightFactory || createFactory(right(BaseComponent));\n      return rightFactory(props);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'branch'))(Branch);\n    }\n\n    return Branch;\n  };\n};\n\nvar renderComponent = function renderComponent(Component$$1) {\n  return function (_) {\n    var factory = createFactory(Component$$1);\n\n    var RenderComponent = function RenderComponent(props) {\n      return factory(props);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      RenderComponent.displayName = wrapDisplayName(Component$$1, 'renderComponent');\n    }\n\n    return RenderComponent;\n  };\n};\n\nvar Nothing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Nothing, _Component);\n\n  function Nothing() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Nothing.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Nothing;\n}(Component);\n\nvar renderNothing = function renderNothing(_) {\n  return Nothing;\n};\n\nvar shouldUpdate = function shouldUpdate(test) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var ShouldUpdate =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(ShouldUpdate, _Component);\n\n      function ShouldUpdate() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = ShouldUpdate.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return test(this.props, nextProps);\n      };\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return ShouldUpdate;\n    }(Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'shouldUpdate'))(ShouldUpdate);\n    }\n\n    return ShouldUpdate;\n  };\n};\n\nvar pure = function pure(BaseComponent) {\n  var hoc = shouldUpdate(function (props, nextProps) {\n    return !shallowEqual(props, nextProps);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return setDisplayName(wrapDisplayName(BaseComponent, 'pure'))(hoc(BaseComponent));\n  }\n\n  return hoc(BaseComponent);\n};\n\nvar onlyUpdateForKeys = function onlyUpdateForKeys(propKeys) {\n  var hoc = shouldUpdate(function (props, nextProps) {\n    return !shallowEqual(pick(nextProps, propKeys), pick(props, propKeys));\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'onlyUpdateForKeys'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar onlyUpdateForPropTypes = function onlyUpdateForPropTypes(BaseComponent) {\n  var propTypes = BaseComponent.propTypes;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!propTypes) {\n      /* eslint-disable */\n      console.error('A component without any `propTypes` was passed to ' + '`onlyUpdateForPropTypes()`. Check the implementation of the ' + (\"component with display name \\\"\" + getDisplayName(BaseComponent) + \"\\\".\"));\n      /* eslint-enable */\n    }\n  }\n\n  var propKeys = Object.keys(propTypes || {});\n  var OnlyUpdateForPropTypes = onlyUpdateForKeys(propKeys)(BaseComponent);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return setDisplayName(wrapDisplayName(BaseComponent, 'onlyUpdateForPropTypes'))(OnlyUpdateForPropTypes);\n  }\n\n  return OnlyUpdateForPropTypes;\n};\n\nvar withContext = function withContext(childContextTypes, getChildContext) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var WithContext =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithContext, _Component);\n\n      function WithContext() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n        _this.getChildContext = function () {\n          return getChildContext(_this.props);\n        };\n\n        return _this;\n      }\n\n      var _proto = WithContext.prototype;\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return WithContext;\n    }(Component);\n\n    WithContext.childContextTypes = childContextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withContext'))(WithContext);\n    }\n\n    return WithContext;\n  };\n};\n\nvar getContext = function getContext(contextTypes) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    var GetContext = function GetContext(ownerProps, context) {\n      return factory(_extends({}, ownerProps, context));\n    };\n\n    GetContext.contextTypes = contextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'getContext'))(GetContext);\n    }\n\n    return GetContext;\n  };\n};\n\nvar lifecycle = function lifecycle(spec) {\n  return function (BaseComponent) {\n    var factory = createFactory(BaseComponent);\n\n    if (process.env.NODE_ENV !== 'production' && spec.hasOwnProperty('render')) {\n      console.error('lifecycle() does not support the render method; its behavior is to ' + 'pass all props and state to the base component.');\n    }\n\n    var Lifecycle =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(Lifecycle, _Component);\n\n      function Lifecycle() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = Lifecycle.prototype;\n\n      _proto.render = function render() {\n        return factory(_extends({}, this.props, this.state));\n      };\n\n      return Lifecycle;\n    }(Component);\n\n    Object.keys(spec).forEach(function (hook) {\n      return Lifecycle.prototype[hook] = spec[hook];\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'lifecycle'))(Lifecycle);\n    }\n\n    return Lifecycle;\n  };\n};\n\nvar isClassComponent = function isClassComponent(Component$$1) {\n  return Boolean(Component$$1 && Component$$1.prototype && typeof Component$$1.prototype.render === 'function');\n};\n\nvar toClass = function toClass(baseComponent) {\n  var _class, _temp;\n\n  return isClassComponent(baseComponent) ? baseComponent : (_temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ToClass, _Component);\n\n    function ToClass() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ToClass.prototype;\n\n    _proto.render = function render() {\n      if (typeof baseComponent === 'string') {\n        return React.createElement(baseComponent, this.props);\n      }\n\n      return baseComponent(this.props, this.context);\n    };\n\n    return ToClass;\n  }(Component), _class.displayName = getDisplayName(baseComponent), _class.propTypes = baseComponent.propTypes, _class.contextTypes = baseComponent.contextTypes, _class.defaultProps = baseComponent.defaultProps, _temp);\n};\n\nfunction toRenderProps(hoc) {\n  var RenderPropsComponent = function RenderPropsComponent(props) {\n    return props.children(props);\n  };\n\n  return hoc(RenderPropsComponent);\n}\n\nvar fromRenderProps = function fromRenderProps(RenderPropsComponent, propsMapper, renderPropName) {\n  if (renderPropName === void 0) {\n    renderPropName = 'children';\n  }\n\n  return function (BaseComponent) {\n    var baseFactory = React.createFactory(BaseComponent);\n    var renderPropsFactory = React.createFactory(RenderPropsComponent);\n\n    var FromRenderProps = function FromRenderProps(ownerProps) {\n      var _renderPropsFactory;\n\n      return renderPropsFactory((_renderPropsFactory = {}, _renderPropsFactory[renderPropName] = function () {\n        return baseFactory(_extends({}, ownerProps, propsMapper.apply(void 0, arguments)));\n      }, _renderPropsFactory));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'fromRenderProps'))(FromRenderProps);\n    }\n\n    return FromRenderProps;\n  };\n};\n\nvar setPropTypes = function setPropTypes(propTypes) {\n  return setStatic('propTypes', propTypes);\n};\n\nvar compose = function compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  }, function (arg) {\n    return arg;\n  });\n};\n\nvar createSink = function createSink(callback) {\n  var Sink =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Sink, _Component);\n\n    function Sink() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n      _this.state = {};\n      return _this;\n    }\n\n    Sink.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n      callback(nextProps);\n      return null;\n    };\n\n    var _proto = Sink.prototype;\n\n    _proto.render = function render() {\n      return null;\n    };\n\n    return Sink;\n  }(Component);\n\n  polyfill(Sink);\n  return Sink;\n};\n\nvar componentFromProp = function componentFromProp(propName) {\n  var Component$$1 = function Component$$1(props) {\n    return createElement(props[propName], omit(props, [propName]));\n  };\n\n  Component$$1.displayName = \"componentFromProp(\" + propName + \")\";\n  return Component$$1;\n};\n\nvar nest = function nest() {\n  for (var _len = arguments.length, Components = new Array(_len), _key = 0; _key < _len; _key++) {\n    Components[_key] = arguments[_key];\n  }\n\n  var factories = Components.map(createFactory);\n\n  var Nest = function Nest(_ref) {\n    var children = _ref.children,\n        props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n    return factories.reduceRight(function (child, factory) {\n      return factory(props, child);\n    }, children);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var displayNames = Components.map(getDisplayName);\n    Nest.displayName = \"nest(\" + displayNames.join(', ') + \")\";\n  }\n\n  return Nest;\n};\n\nvar hoistStatics = function hoistStatics(higherOrderComponent, blacklist) {\n  return function (BaseComponent) {\n    var NewComponent = higherOrderComponent(BaseComponent);\n    hoistNonReactStatics(NewComponent, BaseComponent, blacklist);\n    return NewComponent;\n  };\n};\n\nvar _config = {\n  fromESObservable: null,\n  toESObservable: null\n};\n\nvar configureObservable = function configureObservable(c) {\n  _config = c;\n};\n\nvar config = {\n  fromESObservable: function fromESObservable(observable) {\n    return typeof _config.fromESObservable === 'function' ? _config.fromESObservable(observable) : observable;\n  },\n  toESObservable: function toESObservable(stream) {\n    return typeof _config.toESObservable === 'function' ? _config.toESObservable(stream) : stream;\n  }\n};\n\nvar componentFromStreamWithConfig = function componentFromStreamWithConfig(config$$1) {\n  return function (propsToVdom) {\n    return (\n      /*#__PURE__*/\n      function (_Component) {\n        _inheritsLoose(ComponentFromStream, _Component);\n\n        function ComponentFromStream() {\n          var _config$fromESObserva;\n\n          var _this;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n          _this.state = {\n            vdom: null\n          };\n          _this.propsEmitter = createChangeEmitter();\n          _this.props$ = config$$1.fromESObservable((_config$fromESObserva = {\n            subscribe: function subscribe(observer) {\n              var unsubscribe = _this.propsEmitter.listen(function (props) {\n                if (props) {\n                  observer.next(props);\n                } else {\n                  observer.complete();\n                }\n              });\n\n              return {\n                unsubscribe: unsubscribe\n              };\n            }\n          }, _config$fromESObserva[$$observable] = function () {\n            return this;\n          }, _config$fromESObserva));\n          _this.vdom$ = config$$1.toESObservable(propsToVdom(_this.props$));\n          return _this;\n        }\n\n        var _proto = ComponentFromStream.prototype;\n\n        _proto.componentWillMount = function componentWillMount() {\n          var _this2 = this;\n\n          // Subscribe to child prop changes so we know when to re-render\n          this.subscription = this.vdom$.subscribe({\n            next: function next(vdom) {\n              _this2.setState({\n                vdom: vdom\n              });\n            }\n          });\n          this.propsEmitter.emit(this.props);\n        };\n\n        _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n          // Receive new props from the owner\n          this.propsEmitter.emit(nextProps);\n        };\n\n        _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n          return nextState.vdom !== this.state.vdom;\n        };\n\n        _proto.componentWillUnmount = function componentWillUnmount() {\n          // Call without arguments to complete stream\n          this.propsEmitter.emit(); // Clean-up subscription before un-mounting\n\n          this.subscription.unsubscribe();\n        };\n\n        _proto.render = function render() {\n          return this.state.vdom;\n        };\n\n        return ComponentFromStream;\n      }(Component)\n    );\n  };\n};\n\nvar componentFromStream = function componentFromStream(propsToVdom) {\n  return componentFromStreamWithConfig(config)(propsToVdom);\n};\n\nvar identity$1 = function identity(t) {\n  return t;\n};\n\nvar mapPropsStreamWithConfig = function mapPropsStreamWithConfig(config$$1) {\n  var componentFromStream$$1 = componentFromStreamWithConfig({\n    fromESObservable: identity$1,\n    toESObservable: identity$1\n  });\n  return function (transform) {\n    return function (BaseComponent) {\n      var factory = createFactory(BaseComponent);\n      var fromESObservable = config$$1.fromESObservable,\n          toESObservable = config$$1.toESObservable;\n      return componentFromStream$$1(function (props$) {\n        var _ref;\n\n        return _ref = {\n          subscribe: function subscribe(observer) {\n            var subscription = toESObservable(transform(fromESObservable(props$))).subscribe({\n              next: function next(childProps) {\n                return observer.next(factory(childProps));\n              }\n            });\n            return {\n              unsubscribe: function unsubscribe() {\n                return subscription.unsubscribe();\n              }\n            };\n          }\n        }, _ref[$$observable] = function () {\n          return this;\n        }, _ref;\n      });\n    };\n  };\n};\n\nvar mapPropsStream = function mapPropsStream(transform) {\n  var hoc = mapPropsStreamWithConfig(config)(transform);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'mapPropsStream'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nvar createEventHandlerWithConfig = function createEventHandlerWithConfig(config$$1) {\n  return function () {\n    var _config$fromESObserva;\n\n    var emitter = createChangeEmitter();\n    var stream = config$$1.fromESObservable((_config$fromESObserva = {\n      subscribe: function subscribe(observer) {\n        var unsubscribe = emitter.listen(function (value) {\n          return observer.next(value);\n        });\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _config$fromESObserva[$$observable] = function () {\n      return this;\n    }, _config$fromESObserva));\n    return {\n      handler: emitter.emit,\n      stream: stream\n    };\n  };\n};\nvar createEventHandler = createEventHandlerWithConfig(config);\n\n// Higher-order component helpers\n\nexport { mapProps, withProps, withPropsOnChange, withHandlers, defaultProps, renameProp, renameProps, flattenProp, withState, withStateHandlers, withReducer, branch, renderComponent, renderNothing, shouldUpdate, pure, onlyUpdateForKeys, onlyUpdateForPropTypes, withContext, getContext, lifecycle, toClass, toRenderProps, fromRenderProps, setStatic, setPropTypes, setDisplayName, compose, getDisplayName, wrapDisplayName, shallowEqual, isClassComponent, createSink, componentFromProp, nest, hoistStatics, componentFromStream, componentFromStreamWithConfig, mapPropsStream, mapPropsStreamWithConfig, createEventHandler, createEventHandlerWithConfig, configureObservable as setObservableConfig };\n","import {useMemo} from 'react';\nimport {expandCollapsedBlockBy} from '../utils';\n\nexport default (minLinesExclusive, hunks, oldSource) => {\n    if (!oldSource) {\n        return hunks;\n    }\n\n    const renderingHunks = useMemo(\n        () => {\n            const predicate = lines => lines < minLinesExclusive;\n\n            return expandCollapsedBlockBy(hunks, oldSource, predicate);\n        },\n        [minLinesExclusive, hunks, oldSource]\n    );\n\n    return renderingHunks;\n};\n","import {useReducer, useRef} from 'react';\n\nconst updateCollection = (collection, {type, value}) => {\n    switch (type) {\n        case 'push':\n            return [...collection, value];\n        case 'clear':\n            return collection.length ? [] : collection;\n        case 'toggle':\n            return collection.includes(value)\n                ? collection.filter(item => item !== value)\n                : collection.concat(value);\n        case 'only':\n            return [value];\n        default:\n            return collection;\n    }\n};\n\nexport const useCollection = () => {\n    const [collection, dispatch] = useReducer(updateCollection, []);\n\n    return {\n        collection,\n        clear() {\n            dispatch({type: 'clear'});\n        },\n        push(value) {\n            dispatch({value, type: 'push'});\n        },\n        toggle(value) {\n            dispatch({value, type: 'toggle'});\n        },\n        only(value) {\n            dispatch({value, type: 'only'});\n        },\n    };\n};\n\n// This is actually a hack around the lack of custom comparator support in `useEffect` hook.\nexport const useCustomEqualIdentifier = (value, equals) => {\n    const cache = useRef({});\n    const identifier = useRef(0);\n    const isEqual = equals(value, cache.current);\n\n    if (!isEqual) {\n        cache.current = value;\n        identifier.current = identifier.current + 1;\n    }\n\n    return identifier.current;\n};\n","import {useEffect} from 'react';\nimport {getChangeKey} from '../utils';\nimport {useCollection} from './helpers';\n\nexport default (hunks, {multiple = false} = {}) => {\n    const {collection, clear, toggle, only} = useCollection();\n    useEffect(clear, [hunks]);\n\n    return [\n        collection,\n        ({change}) => {\n            const changeKey = getChangeKey(change);\n            if (multiple) {\n                toggle(changeKey);\n            }\n            else {\n                only(changeKey);\n            }\n        },\n    ];\n};\n","import {useEffect, useMemo} from 'react';\nimport {expandFromRawCode} from '../utils';\nimport {useCollection} from './helpers';\n\nexport default (hunks, oldSource) => {\n    const {collection: expandedRanges, clear, push} = useCollection();\n    useEffect(clear, [hunks, oldSource]);\n    const linesOfOldSource = useMemo(() => (oldSource || '').split('\\n'), [oldSource]);\n    const renderingHunks = useMemo(\n        () => {\n            if (!linesOfOldSource.length) {\n                return hunks;\n            }\n\n            return expandedRanges.reduce(\n                (hunks, [start, end]) => expandFromRawCode(hunks, linesOfOldSource, start, end),\n                hunks\n            );\n        },\n        [linesOfOldSource, hunks, expandedRanges]\n    );\n\n    return [\n        renderingHunks,\n        (start, end) => push([start, end]),\n    ];\n};\n","'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","'use strict';\n\nfunction shallowEqualArrays(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualArrays;\n","import {useState, useRef, useEffect} from 'react';\nimport shallowEquals from 'shallow-equal/objects';\nimport arrayShallowEquals from 'shallow-equal/arrays';\nimport {flatMap} from 'lodash';\nimport {useCustomEqualIdentifier} from './helpers';\n\nconst uid = (() => {\n    let current = 0;\n\n    return () => {\n        current = current + 1;\n        return current;\n    };\n})();\n\nconst findAbnormalChanges = hunks => flatMap(hunks, hunk => hunk.changes.filter(change => !change.isNormal));\n\nconst areHunksEqual = (xHunks, yHunks) => {\n    const xChanges = findAbnormalChanges(xHunks);\n    const yChanges = findAbnormalChanges(yHunks);\n\n    return arrayShallowEquals(xChanges, yChanges);\n};\n\nconst defaultShouldTokenize = ({hunks: currentHunks, ...currentPayload}, {hunks: prevHunks, ...prevPayload}) => {\n    if (currentPayload.oldSource !== prevPayload.oldSource) {\n        return true;\n    }\n\n    // When `oldSource` is provided, we can get the new source by applying diff,\n    // so when hunks keep identical, the tokenize result will always remain the same.\n    if (currentPayload.oldSource) {\n        return !shallowEquals(currentPayload, prevPayload) || !areHunksEqual(currentHunks, prevHunks);\n    }\n\n    return currentHunks !== prevHunks || !shallowEquals(currentPayload, prevPayload);\n};\n\nexport default (worker, payload, options = {}) => {\n    const {shouldTokenize = defaultShouldTokenize} = options;\n    const payloadIdentifier = useCustomEqualIdentifier(\n        payload,\n        (current, previous) => !shouldTokenize(current, previous)\n    );\n    const [tokenizeResult, setTokenizeResult] = useState({tokens: null, tokenizationFailReason: null});\n    const job = useRef(null);\n    useEffect(\n        () => {\n            const receiveTokens = ({data: {payload, id}}) => {\n                if (id !== job.current) {\n                    return;\n                }\n\n                if (payload.success) {\n                    setTokenizeResult({tokens: payload.tokens, tokenizationFailReason: null});\n                }\n                else {\n                    setTokenizeResult({tokens: null, tokenizationFailReason: payload.reason});\n                }\n            };\n            worker.addEventListener('message', receiveTokens);\n            return () => worker.removeEventListener('message', receiveTokens);\n        },\n        [worker] // We don't really expect the worker to be changed in an application's lifecycle\n    );\n    useEffect(\n        () => {\n            job.current = uid();\n            const data = {\n                payload,\n                id: job.current,\n                type: 'tokenize',\n            };\n            worker.postMessage(data);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [payloadIdentifier, worker, shouldTokenize] // TODO: How about worker changes when payload keeps identical?\n    );\n\n    return tokenizeResult;\n};\n","import {wrapDisplayName} from 'recompose';\nimport {useSourceExpansion} from '../hooks';\n\nexport default () => ComponentIn => {\n    const ComponentOut = props => {\n        const [renderingHunks, expandRange] = useSourceExpansion(props.hunks, props.oldSource);\n\n        return (\n            <ComponentIn\n                {...props}\n                hunks={renderingHunks}\n                onExpandRange={expandRange}\n            />\n        );\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withSourceExpansion');\n\n    return ComponentOut;\n};\n","import {wrapDisplayName} from 'recompose';\nimport {useMinCollapsedLines} from '../hooks';\n\nexport default minLinesExclusive => ComponentIn => {\n    const ComponentOut = props => {\n        const renderingHunks = useMinCollapsedLines(minLinesExclusive, props.hunks, props.oldSource);\n        return <ComponentIn {...props} hunks={renderingHunks} />;\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'minCollapsedLines');\n\n    return ComponentOut;\n};\n","import {wrapDisplayName} from 'recompose';\nimport {useChangeSelect} from '../hooks';\n\nexport default options => ComponentIn => {\n    const ComponentOut = props => {\n        const [selectedChanges, toggleChangeSelection] = useChangeSelect(props.hunks, options);\n\n        return (\n            <ComponentIn\n                {...props}\n                selectedChanges={selectedChanges}\n                onToggleChangeSelection={toggleChangeSelection}\n            />\n        );\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withChangeSelect');\n\n    return ComponentOut;\n};\n","import {wrapDisplayName} from 'recompose';\nimport {useTokenizeWorker} from '../hooks';\n\nconst defaultMapPayload = data => {\n    return data;\n};\n\nexport default (worker, options = {}) => {\n    const {mapPayload = defaultMapPayload, ...hookOptions} = options;\n\n    const resolveMessagePayload = props => {\n        const {hunks, oldSource, language} = props;\n        const input = {\n            language: language,\n            oldSource: oldSource,\n            hunks: hunks,\n        };\n        return mapPayload(input, props);\n    };\n\n    return ComponentIn => {\n        const ComponentOut = props => {\n            const payload = resolveMessagePayload(props);\n            const tokenizationResult = useTokenizeWorker(worker, payload, hookOptions);\n\n            return <ComponentIn {...props} {...tokenizationResult} />;\n        };\n\n        ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withTokenizeWorker');\n\n        return ComponentOut;\n    };\n};\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","window","ContextType","createContext","Provider","useDiffSettings","useContext","first","array","last","sideToProperty","side","computeLineNumberFactory","isNormal","isInsert","lineNumber","oldLineNumber","isDelete","newLineNumber","isInHunkFactory","startProperty","linesProperty","hunk","start","end","isBetweenHunksFactory","previousHunk","nextHunk","findChangeByLineNumberFactory","computeLineNumber","findContainerHunk","isInHunk","hunks","find","findContainerHunkFactory","containerHunk","changes","change","getCorrespondingLineNumberFactory","baseSide","anotherSide","baseStart","baseLines","correspondingStart","correspondingLines","baseLineNumber","correspondingLineNumber","isBetweenHunks","firstHunk","spanFromStart","lastHunk","spanFromEnd","currentHunk","changeIndex","findIndex","possibleCorrespondingChangeIndex","possibleCorrespondingChange","negativeChangeType","type","Error","predicate","fromIndex","fromRight","index","this","__data__","size","value","other","eq","splice","prototype","data","assocIndexOf","pop","undefined","ListCache","entries","clear","entry","set","listCacheClear","listCacheDelete","get","listCacheGet","has","listCacheHas","listCacheSet","result","global","Object","freeSelf","self","freeGlobal","Function","root","Symbol","objectProto","nativeObjectToString","toString","symToStringTag","toStringTag","isOwn","tag","unmasked","e","nullTag","undefinedTag","getRawTag","objectToString","asyncTag","funcTag","genTag","proxyTag","isObject","baseGetTag","maskSrcKey","uid","exec","coreJsData","keys","IE_PROTO","func","funcToString","reIsHostCtor","funcProto","reIsNative","RegExp","replace","isMasked","isFunction","test","toSource","object","getValue","baseIsNative","getNative","nativeCreate","HASH_UNDEFINED","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","hash","map","Map","string","isKeyable","getMapData","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","LARGE_ARRAY_SIZE","pairs","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","SetCache","values","add","setCacheAdd","setCacheHas","cache","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","arraySome","othIndex","cacheHas","Uint8Array","forEach","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","byteLength","byteOffset","buffer","name","message","convert","mapToArray","setToArray","equalArrays","offset","keysFunc","symbolsFunc","arrayPush","resIndex","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","arrayFilter","symbol","stubArray","n","iteratee","argsTag","isObjectLike","baseIsArguments","freeExports","nodeType","freeModule","Buffer","isBuffer","stubFalse","MAX_SAFE_INTEGER","reIsUint","typedArrayTags","isLength","freeProcess","process","nodeUtil","types","require","binding","nodeIsTypedArray","isTypedArray","baseUnary","baseIsTypedArray","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","baseTimes","String","isIndex","Ctor","constructor","transform","overArg","isPrototype","nativeKeys","isArrayLike","arrayLikeKeys","baseKeys","baseGetAllKeys","getSymbols","objProps","getAllKeys","objLength","skipCtor","objValue","objCtor","othCtor","dataViewCtorString","DataView","mapCtorString","promiseCtorString","Promise","setCtorString","Set","weakMapCtorString","WeakMap","getTag","ArrayBuffer","resolve","ctorString","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsEqual","baseIsEqualDeep","source","matchData","noCustomizer","srcValue","isStrictComparable","getMatchData","matchesStrictComparable","baseIsMatch","reIsDeepProp","reIsPlainProp","isSymbol","FUNC_ERROR_TEXT","memoize","resolver","TypeError","memoized","args","Cache","MAX_MEMOIZE_SIZE","rePropName","reEscapeChar","memoizeCapped","charCodeAt","match","number","quote","subString","INFINITY","symbolToString","baseToString","arrayMap","isKey","stringToPath","path","castPath","toKey","defaultValue","baseGet","hasFunc","hasPath","baseHasIn","hasIn","baseProperty","basePropertyDeep","identity","baseMatchesProperty","baseMatches","property","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isBinary","slice","MAX_INTEGER","toNumber","toFinite","remainder","nativeMax","Math","max","nativeMin","min","toInteger","baseFindIndex","baseIteratee","computeOldLineNumber","computeNewLineNumber","getOldRangeFromHunk","oldStart","oldLines","createHunkFromChanges","reduce","isPlain","newLines","newStart","content","textLinesToHunk","lines","oldStartLineNumber","newStartLineNumber","line","sliceHunk","startOldLineNumber","endOldLineNumber","startIndex","nearestHeadingNocmalChangeIndex","_findLastIndex","slicedChanges","endIndex","appendOrMergeHunk","concat","mergedHunk","mergeHunk","previousStart","previousEnd","nextStart","nextEnd","head","tail","insertHunk","insertion","insertionOldLineNumber","insertPosition","getCorrespondingNewLineNumber","isOldLineNumberInHunk","isOldLineNumberBetweenHunks","splitRangeToValidOnes","correspondingHunkIndex","findCorrespondingValidHunkIndex","correspondingHunk","headingChangesCount","validEnd","nearestNormalChangeIndex","findNearestNormalChangeIndex","validStartChange","validStart","adjacentChangesCount","expandFromRawCode","rawCodeOrLines","range","slicedLines","split","slicedHunk","expandCodeByValidRange","getCollapsedLinesCountBetween","expandCollapsedBlockBy","linesOfCode","initialExpandingBlocks","expandingBlocks","getChangeKey","findChangeByOldLineNumber","findChangeByNewLineNumber","getCorrespondingOldLineNumber","parser","parse","currentInfo","changeOldLine","changeNewLine","infos","stat","linesLen","indexOf","oldEndingNewLine","newEndingNewLine","simiLine","currentInfoType","nextLine","oldMode","newMode","similarity","simiLoop","spaceIndex","infoType","segs","revs","oldRevision","newRevision","infoStr","oldPath","newPath","typeChar","lastChange","mapHunk","options","nearbySequences","current","lastDeletionIndex","zipChanges","mapFile","file","normalizeDiffText","text","indexOfFirstLineBreak","indexOfSecondLineBreak","firstLine","secondLine","parseDiff","diffText","trim","files","defineProperty","configurable","enumerable","writable","iterable","props","createBaseFor","baseFor","baseForOwn","baseAssignValue","defaultRenderToken","markType","properties","className","children","renderWithClassName","React","legacyClassName","CodeCell","tokens","renderToken","attributes","actualRenderToken","token","propTypes","PropTypes","isRequired","arrayOf","defaultProps","memo","renderDefaultBy","wrapInAnchorBy","gutterAnchor","anchorTarget","element","href","composeCallback","own","custom","useBoundCallbacks","callbacks","hoverOn","hoverOff","useMemo","output","_mapValues","fn","onMouseEnter","onMouseLeave","renderGutterCell","events","inHoverState","renderGutter","gutterOptions","renderDefault","wrapInAnchor","UnifiedChange","setValue","selected","gutterClassName","codeClassName","gutterEvents","codeEvents","hideGutter","generateAnchorID","useState","useCallback","hover","eventArg","boundGutterEvents","boundCodeEvents","anchorID","gutterClassNameValue","codeClassNameValue","id","bool","UnifiedWidget","colSpan","UnifiedHunk","widgets","childrenProps","elements","widget","groupElements","selectedChanges","lineClassName","changeProps","tokensOfLine","includes","renderRow","useCallbackOnSide","setHover","customCallbacks","markHover","unmarkHover","renderCells","gutterAnchorTarget","sideName","gutterProps","SplitChange","oldChange","newChange","oldSelected","newSelected","oldTokens","newTokens","monotonous","oldGutterEvents","newGutterEvents","oldCodeEvents","newCodeEvents","oldAnchorID","newAnchorID","commons","oldArgs","newArgs","lineTypeClassName","SplitWidget","oldElement","newElement","keyForPair","x","y","SplitHunk","findWidget","next","rowChanges","oldWidget","newWidget","item","oldValue","newValue","old","Hunk","gutterType","context","RenderingHunk","viewType","oneOf","shape","contentClassName","noop","setUserSelectStyle","selectable","style","userSelect","Diff","useRef","enableColumnSelection","target","button","closestCell","document","classList","contains","parentNode","findClosest","getSelection","removeAllRanges","_toConsumableArray","querySelectorAll","cells","diffType","optimizeSelection","remainings","onTableMouseDown","cols","ref","onMouseDown","objectOf","node","warning","env","NODE_ENV","printWarning","format","len","argIndex","console","error","condition","SplitDecoration","computedClassName","computedGutterClassName","computedContentClassName","columnCount","headerContentColSpan","Children","count","gutter","UnifiedDecoration","Decoration","childrenCount","RenderingDecoration","objectCreate","create","proto","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","baseCreate","baseLodash","spreadableSymbol","isConcatSpreadable","baseFlatten","depth","isStrict","isFlattenable","thisArg","otherArgs","constant","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","lastCalled","stamp","remaining","shortOut","baseSetToString","setToString","overRest","flatten","metaMap","realNames","otherFunc","MAX_ARRAY_LENGTH","LazyWrapper","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","wrapper","clone","copyArray","lodash","wrapperClone","funcName","getFuncName","getData","WRAP_CURRY_FLAG","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","flatRest","funcs","prereq","thru","reverse","isLaziable","plant","createFlow","setter","accumulator","eachFunc","collection","createBaseEach","baseEach","initializer","arrayAggregator","baseAggregator","createAggregator","baseMap","applyHunk","cursor","mapChanges","toValue","changesByLineNumber","_keyBy","maxLineNumber","_last","from","toTextPair","_flatMap","oldChanges","newChanges","groupChanges","toText","createRoot","highlight","refractor","oldSource","language","newSource","applyDiff","highlightText","toTree","isNew","assignValue","copyObject","nativeKeysIn","isProto","baseKeysIn","keysIn","allocUnsafe","isDeep","copy","getPrototypeOf","getPrototype","getSymbolsIn","input","arrayBuffer","dataView","cloneArrayBuffer","reFlags","regexp","lastIndex","typedArray","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneDataView","cloneTypedArray","cloneRegExp","cloneSymbol","nodeIsMap","isMap","baseIsMap","nodeIsSet","isSet","baseIsSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","cloneableTags","baseClone","isFlat","isFull","initCloneArray","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","initCloneByTag","subValue","getAllKeysIn","arrayEach","baseSlice","parent","objectCtorString","isPlainObject","paths","customOmitClone","baseUnset","leaf","splitStart","splitEnd","wrapSplitNode","parents","body","wrap","splitByLineBreak","currentLine","splitPathToLines","currentRemaining","nextLines","tree","treeToPathList","nodeToUse","_omit","child","attachNode","previousSibling","xBase","yBase","_isEqual","areNodesMeregable","pathList","splitPathToEncloseRange","rangeEnd","nodeStart","nodeEnd","wrapNode","segments","linesOfPaths","ranges","rangesByLine","_groupBy","_isEmpty","pickRangesFromPath","oldRanges","newRanges","oldLinesOfPaths","newLinesOfPaths","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","getTime","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","diff_lineMode_","diff_bisect_","a","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","j","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","fromCharCode","pointermin","pointermax","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","param","decodeURI","ex","isNaN","match_main","match_bitap_","s","match_alphabet_","match_bitapScore_","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","index2","index1","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","m","sign","DIFF_EQUAL","DiffMatchPatch","DIFF_DELETE","DIFF_INSERT","findChangeBlocks","_findIndex","splitDiffToLines","currentLineRemaining","diffsToEdits","diff","edits","convertToLinesOfEdits","linesOfDiffs","startLineNumber","oldDiffs","newDiffs","groupDiffs","diffChangeBlock","getLineNumber","diffByLine","currentChange","oldEdits","newEdits","previousChange","changeBlocks","findEdits","currentOld","currentNew","pickRanges","_flatten","markInPaths","word","replacement","mark","tokenize","enhancers","linesOfPathsPair","toTokenTrees","normalizeToLines","_flow","enhance","backToTree","oldTrees","newTrees","currentListeners","nextListeners","ensureCanMutateNextListeners","listen","listener","isSubscribed","emit","listeners","observable","ponyfill","wrapDisplayName","BaseComponent","hocName","Component$$1","displayName","minLinesExclusive","updateCollection","filter","useCollection","useReducer","dispatch","toggle","only","useCustomEqualIdentifier","equals","identifier","multiple","useEffect","changeKey","expandedRanges","linesOfOldSource","objA","objB","aKeys","bKeys","arrA","arrB","findAbnormalChanges","defaultShouldTokenize","yHunks","xChanges","yChanges","currentHunks","currentPayload","prevHunks","prevPayload","shallowEquals","arrayShallowEquals","worker","payload","shouldTokenize","payloadIdentifier","previous","tokenizationFailReason","tokenizeResult","setTokenizeResult","job","receiveTokens","success","reason","addEventListener","removeEventListener","postMessage","ComponentIn","ComponentOut","useSourceExpansion","renderingHunks","expandRange","onExpandRange","useMinCollapsedLines","useChangeSelect","toggleChangeSelection","onToggleChangeSelection","defaultMapPayload","mapPayload","hookOptions","resolveMessagePayload","tokenizationResult","useTokenizeWorker"],"mappings":"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"}