{"version":3,"sources":["../src/factory.js"],"names":["eventNames","updateEvents","isBrowser","window","plotComponentFactory","Plotly","PlotlyComponent","props","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","then","el","error","unmounting","Error","reason","react","data","layout","config","frames","err","console","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","removeEventListener","removeUpdateEvents","purge","removeListener","forEach","updateEvent","on","callback","_transitionData","_frames","figure","invoke","useResizeHandler","Plots","resize","addEventListener","debug","gd","eventName","prop","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","divId","style","className","Component","propTypes","PropTypes","arrayOf","object","number","func","bool","string","defaultProps","position","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_doubleclick',\n  'plotly_animated',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (!this.el) {\n            let error;\n            if (this.unmounting) {\n              error = new Error('Component is unmounting');\n              error.reason = 'unmounting';\n            } else {\n              error = new Error('Missing element reference');\n            }\n            throw error;\n          }\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => this.syncWindowResize(shouldInvokeResizeHandler))\n        .then(this.syncEventHandlers)\n        .then(() => this.figureCallback(figureCallbackFunction))\n        .then(shouldAttachUpdateEvents ? this.attachUpdateEvents : () => {})\n        .catch(err => {\n          if (err.reason === 'unmounting') {\n            return;\n          }\n          console.error('Error while plotting:', err); // eslint-disable-line no-console\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach(updateEvent => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach(updateEvent => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach(eventName => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach(eventName => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n"],"file":"factory.js"}